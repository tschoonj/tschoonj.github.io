<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[The Code Dungeon]]></title>
  <link href="http://tschoonj.github.io/atom.xml" rel="self"/>
  <link href="http://tschoonj.github.io/"/>
  <updated>2013-09-05T13:34:44+02:00</updated>
  <id>http://tschoonj.github.io/</id>
  <author>
    <name><![CDATA[Tom Schoonjans]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Building libtool modules: Python bindings]]></title>
    <link href="http://tschoonj.github.io/blog/2013/09/04/building-libtool-modules-python-bindings/"/>
    <updated>2013-09-04T10:47:00+02:00</updated>
    <id>http://tschoonj.github.io/blog/2013/09/04/building-libtool-modules-python-bindings</id>
    <content type="html"><![CDATA[<p>One of the software packages (<a href="http://github.com/tschoonj/xraylib">xraylib</a>) I am working on, consists of a C-library with bindings to a number of other languages such as Python, Fortran 2003, IDL, Java, Ruby, Lua and Perl. Apart from IDL and Fortran 2003, the source code for these bindings is generated automatically using <a href="http://www.swig.org">swig</a>, although with considerable language-specific modifications to the swig interface file.</p>

<p>The bindings source code afterwards needs to be compiled into a dynamically loadable library, which will then be loaded at runtime by the program whenever the user needs to use a function or variable from the bindings (actually from the underlying C-library, but exposed through the swig generated bindings).
As a rule, each programming language that supports such dynamically loadable libraries comes with specific instructions on how to generate the libraries from the bindings source code, often using platform independent tools.</p>

<p>However, these tools never seem to integrate well with autoconf and automake and lead to quite complicated Makefile.am files. A considerable more easy approach would consist of relying on libtool&rsquo;s functionality of generating these dynamically loadable libraries (called modules in the libtool documentation).
In this series of posts I will share my experiences on generating bindings to the aforementioned languages using libtool in a relatively clear and easy way. All the code has been tested on Linux and Mac OS X. It may also work on Windows though, provided you install a bash shell with the required tools.</p>

<p>In this first post I will discuss Python extension modules.</p>

<!--more-->


<h2>Checking for python development tools</h2>

<p>If you want to create an autotools based project consisting of a C-library and python bindings, then one of the first things that configure will need to check for is the presence of the python interpreter and the development kit consisting of the python headers and some essential tools.
I accomplished this by adding the following lines into configure.ac</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#configure.ac snippet</span>
</span><span class='line'><span class="c">#copy paste into your own configure.ac file</span>
</span><span class='line'>
</span><span class='line'><span class="c">#check for swig</span>
</span><span class='line'>AC_CHECK_PROGS<span class="o">([</span>SWIG<span class="o">]</span>,<span class="o">[</span>swig<span class="o">]</span>,<span class="o">[</span><span class="s2">&quot;noswig&quot;</span><span class="o">])</span>
</span><span class='line'>
</span><span class='line'><span class="c">#present configure with a command-line option to disable the python bindings</span>
</span><span class='line'>AC_ARG_ENABLE<span class="o">([</span>python<span class="o">]</span>,<span class="o">[</span>AS_HELP_STRING<span class="o">([</span>--disable-python<span class="o">]</span>,<span class="o">[</span>build without the python bindings<span class="o">])]</span>,<span class="o">[</span><span class="nv">enable_python</span><span class="o">=</span><span class="nv">$enableval</span><span class="o">]</span>,<span class="o">[</span><span class="nv">enable_python</span><span class="o">=</span>check<span class="o">])</span>
</span><span class='line'><span class="c">#default behavior is to install the python bindings into subfolders of $prefix</span>
</span><span class='line'><span class="c">#however, this may require the user to set the PYTHONPATH environment variable</span>
</span><span class='line'><span class="c">#in order to avoid this, invoke configure with the --enable-python-integration option</span>
</span><span class='line'>
</span><span class='line'>AC_ARG_ENABLE<span class="o">([</span>python-integration<span class="o">]</span>,<span class="o">[</span>AS_HELP_STRING<span class="o">([</span>--enable-python-integration<span class="o">]</span>,<span class="o">[</span>install the python bindings in the interpreters site-packages folder<span class="o">])]</span>,<span class="o">[</span><span class="nv">enable_python_integration</span><span class="o">=</span><span class="nv">$enableval</span><span class="o">]</span>,<span class="o">[</span><span class="nv">enable_python_integration</span><span class="o">=</span>check<span class="o">])</span>
</span><span class='line'>
</span><span class='line'><span class="nv">VALID_PYTHON</span><span class="o">=</span>
</span><span class='line'>
</span><span class='line'><span class="k">if </span><span class="nb">test</span> <span class="s2">&quot;x$SWIG&quot;</span> <span class="o">=</span> xnoswig <span class="o">&amp;&amp;</span> <span class="nb">test</span> <span class="s2">&quot;x$enable_python&quot;</span> <span class="o">=</span> xyes ; <span class="k">then</span>
</span><span class='line'>        <span class="c">#don&#39;t even bother when swig is not found</span>
</span><span class='line'>        AC_MSG_ERROR<span class="o">([</span>--enable-python was given as an option but swig was not found on the system<span class="o">])</span>
</span><span class='line'><span class="k">elif </span><span class="nb">test</span> <span class="s2">&quot;x$SWIG&quot;</span> <span class="o">=</span> xswig <span class="o">&amp;&amp;</span> <span class="nb">test</span> <span class="s2">&quot;x$enable_python&quot;</span> !<span class="o">=</span> xno ; <span class="k">then</span>
</span><span class='line'>        <span class="c">#verify the python installation</span>
</span><span class='line'>        AM_PATH_PYTHON<span class="o">(</span>,<span class="o">[</span><span class="nv">PYTHON_FOUND</span><span class="o">=</span><span class="nb">true</span><span class="o">]</span>,<span class="o">[</span><span class="nv">PYTHON_FOUND</span><span class="o">=</span><span class="nb">false</span><span class="o">])</span>
</span><span class='line'>        <span class="k">if </span><span class="nb">test</span> <span class="s2">&quot;x$PYTHON_FOUND&quot;</span> <span class="o">=</span> xtrue ; <span class="k">then</span>
</span><span class='line'><span class="k">                </span><span class="nv">PYTHON_CPPFLAGS</span><span class="o">=</span>
</span><span class='line'>                <span class="nv">PYTHON_LDFLAGS</span><span class="o">=</span>
</span><span class='line'>                AX_PYTHON_DEVEL
</span><span class='line'>                <span class="k">if </span><span class="nb">test</span> <span class="s2">&quot;x$PYTHON&quot;</span> <span class="o">=</span> x ; <span class="k">then</span>
</span><span class='line'><span class="k">                        if </span><span class="nb">test</span> <span class="s2">&quot;x$enable_python&quot;</span> <span class="o">=</span> xyes ; <span class="k">then</span>
</span><span class='line'><span class="k">                                </span>AC_MSG_ERROR<span class="o">([</span>Incomplete python development package<span class="o">])</span>
</span><span class='line'>                        <span class="k">else</span>
</span><span class='line'><span class="k">                                </span>AC_MSG_WARN<span class="o">([</span>Incomplete python development package<span class="o">])</span>
</span><span class='line'>                        <span class="k">fi</span>
</span><span class='line'><span class="k">                        </span><span class="nv">VALID_PYTHON</span><span class="o">=</span>no
</span><span class='line'>                <span class="k">else</span>
</span><span class='line'><span class="k">                        </span><span class="nv">VALID_PYTHON</span><span class="o">=</span>yes
</span><span class='line'>                <span class="k">fi</span>
</span><span class='line'>
</span><span class='line'><span class="k">        fi</span>
</span><span class='line'><span class="k">fi</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">if </span><span class="nb">test</span> <span class="s2">&quot;x$VALID_PYTHON&quot;</span> <span class="o">=</span> xyes ; <span class="k">then</span>
</span><span class='line'><span class="k">  </span>AC_MSG_NOTICE<span class="o">([</span>Building with Python bindings<span class="o">])</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="k">if </span><span class="nb">test</span> <span class="s2">&quot;x$enable_python_integration&quot;</span> <span class="o">=</span> xyes ; <span class="k">then</span>
</span><span class='line'><span class="k">          </span><span class="nv">pythondir</span><span class="o">=</span><span class="nv">$PYTHON_SITE_PKG</span>
</span><span class='line'>          <span class="nv">pyexecdir</span><span class="o">=</span><span class="nv">$PYTHON_SITE_PKG_EXEC</span>
</span><span class='line'>  <span class="k">fi</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">  </span>AC_SUBST<span class="o">(</span>PYTHONDIR,<span class="nv">$pythondir</span><span class="o">)</span>
</span><span class='line'>  AC_SUBST<span class="o">(</span>PKGPYTHONDIR,<span class="nv">$pkgpythondir</span><span class="o">)</span>
</span><span class='line'>  AC_SUBST<span class="o">(</span>PYEXECDIR,<span class="nv">$pyexecdir</span><span class="o">)</span>
</span><span class='line'>  AC_SUBST<span class="o">(</span>PKGPYEXECDIR,<span class="nv">$pkgpyexecdir</span><span class="o">)</span>
</span><span class='line'><span class="k">fi</span>
</span><span class='line'>
</span><span class='line'>AM_CONDITIONAL<span class="o">([</span>ENABLE_PYTHON<span class="o">]</span>,<span class="o">[</span><span class="nb">test </span>x<span class="nv">$VALID_PYTHON</span> <span class="o">=</span> xyes<span class="o">])</span>
</span></code></pre></td></tr></table></div></figure>


<p>As can be seen from this snippet, I depend on two m4 macros to obtain the required information: <a href="http://www.gnu.org/software/automake/manual/html_node/Python.html">AM_PATH_PYTHON</a>, which searches for Python interpreter and subsequently sets a number of variables that will be used at installation time, and AX_PYTHON_DEVEL (I am using a heavily modified version of the code found at <a href="http://www.gnu.org/software/autoconf-archive/ax_python_devel.html">autoconf archives</a>), which will check for the required headers and perform a test compilation to make sure everything works.</p>

<h2>Writing the Makefile.am</h2>

<p>The Python way of building and installing extensions relies on the <a href="http://docs.python.org/3.3/distutils/setupscript.html#describing-extension-modules">Distutils package</a>, and is guaranteed to work on all platforms but integrates with difficulty into autotools based installation scripts.
However, recent versions of <a href="http://www.gnu.org/software/automake/manual/html_node/Python.html">automake</a> come with built-in support for installing python source files (and even byte-compile them), and comes with some recommendations on how to build your Python extensions module (possibly linked to a C-library as in our case) using libtool. The following example code is based upon these recommendations but also contains additional Makefile targets that deal with generating the Python extension module source through swig. Let&rsquo;s assume our original C-library is called <code>mytest</code>, and is located in the <code>src</code> subfolder of the source tree. The Python bindings will be built in the <code>python</code> subfolder.</p>

<p>In this example, I followed the Python recommendations with regard to naming the extension module:</p>

<blockquote><p>When an extension module written in C or C++ has an accompanying Python module that provides a higher level (e.g. more object oriented) interface, the C/C++ module has a leading underscore.</p><footer><strong>http://www.python.org/dev/peps/pep-0008/#package-and-module-names PEP 8 &#8211; Style Guide for Python Code</strong></footer></blockquote>


<p>In this case, the accompanying Python module will be automatically generated by swig, and will be called <code>mytest.py</code>, while the extension module will receive the libtool name <code>_mytest.la</code>. The actual library extension will be platform dependent (.so on Linux/Mac OS X, .dll on Windows).</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='makefile'><span class='line'><span class="c">#python bindings will only be built if all buildtools are available, hence the following automake conditional</span>
</span><span class='line'><span class="err">if</span> <span class="err">ENABLE_PYTHON</span>
</span><span class='line'><span class="c">#our python extension module</span>
</span><span class='line'><span class="nv">pyexec_LTLIBRARIES</span> <span class="o">=</span> _mytest.la
</span><span class='line'><span class="nv">_mytest_la_CFLAGS</span> <span class="o">=</span> <span class="k">$(</span>PYTHON_CFLAGS<span class="k">)</span> -I<span class="k">$(</span>top_srcdir<span class="k">)</span>/include <span class="k">$(</span>PYTHON_CPPFLAGS<span class="k">)</span>
</span><span class='line'><span class="c">#link to the C-library</span>
</span><span class='line'><span class="c">#probably on Windows one will need to link against the python dll as well</span>
</span><span class='line'><span class="nv">_mytest_la_LIBADD</span> <span class="o">=</span> ../src/mytest.la
</span><span class='line'><span class="c">#the source code for our extensions module</span>
</span><span class='line'><span class="c">#nodist because this file will be generated by swig</span>
</span><span class='line'><span class="nv">nodist__mytest_la_SOURCES</span> <span class="o">=</span> mytest_wrap.c
</span><span class='line'><span class="c">#-module forces libtool to generate a dynamically loadable module</span>
</span><span class='line'><span class="nv">_mytest_la_LDFLAGS</span> <span class="o">=</span> -avoid-version -module -shared -export-dynamic
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c">#nodist because this file will be generated by swig</span>
</span><span class='line'><span class="nv">nodist_python_PYTHON</span> <span class="o">=</span> mytest.py
</span><span class='line'>
</span><span class='line'><span class="c">#this line assumes that the swig interface file mytest.i is located in the src subdirectory</span>
</span><span class='line'><span class="nf">mytest_wrap.c</span><span class="o">:</span> <span class="m">$(top_srcdir)/src/mytest.i</span>
</span><span class='line'>  <span class="k">$(</span>SWIG<span class="k">)</span> -I<span class="k">${</span><span class="nv">top_srcdir</span><span class="k">}</span>/include -includeall -o mytest_wrap.c -python <span class="k">${</span><span class="nv">top_srcdir</span><span class="k">}</span>/src/mytest.i
</span><span class='line'>
</span><span class='line'><span class="nf">mytest.py</span><span class="o">:</span> <span class="m">mytest_wrap.c</span>
</span><span class='line'>
</span><span class='line'><span class="nf">clean-local</span><span class="o">:</span>
</span><span class='line'>  rm -rf mytest_wrap.c mytest.py mytest.pyc
</span><span class='line'>
</span><span class='line'><span class="cp">endif</span>
</span></code></pre></td></tr></table></div></figure>


<p>When writing an autotools based project using these guidelines, you should have no problem compiling and installing your python bindings and the C-library it depends on, with the familiar commands:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>./configure
</span><span class='line'>make
</span><span class='line'>make install</span></code></pre></td></tr></table></div></figure>


<h2>The code</h2>

<p>The full code follows: as usual it&rsquo;s a github gist so feel free to clone it and hack away at it.</p>

<div><script src='https://gist.github.com/6441999.js'></script>
<noscript><pre><code></code></pre></noscript></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Exporting and printing a GtkExtra plot canvas]]></title>
    <link href="http://tschoonj.github.io/blog/2013/07/22/exporting-and-printing-a-gtkextra-plot-canvas/"/>
    <updated>2013-07-22T10:24:00+02:00</updated>
    <id>http://tschoonj.github.io/blog/2013/07/22/exporting-and-printing-a-gtkextra-plot-canvas</id>
    <content type="html"><![CDATA[<p>My software package <a href="http://github.com/tschoonj/xmimsim">XMI-MSIM</a> relies on <a href="http://gtkextra.sourceforge.net/cms/">GtkExtra</a> for the visualization of the simulated X-ray fluorescence spectra.
This library contains a number of useful widgets, such as a spreadsheet widget and a number of plotting tools, for your Gtk2 based GUI&rsquo;s.
Recently, I have become a minor contributor of this project, and I have been particularly active in improving the buildsystem and also generating RPM files for a number of Fedora/RHEL based distros, and DEB files for several recent releases of Ubuntu and Debian. Full instructions on how to obtain access to these packages, which are hosted by <a href="http://www.xmi.ugent.be">my old research group</a>, can be found <a href="http://gtkextra.sourceforge.net/cms/index.php?option=com_content&amp;view=article&amp;id=40&amp;Itemid=21">here</a>.</p>

<p>In todays blog post I am presenting an example of how one can relatively easily add printing and exporting capabilities to GtkExtra&rsquo;s <code>GtkPlotCanvas</code> widget. I will demonstrate this with a short program that I have written that contains a plot of a sine function, and two buttons that allow the user to invoke the dialog windows that will set up the exporting and the printing of the canvas, respectively.</p>

<!--more-->


<h2>Generating the interface</h2>

<p>Start off with a <code>GtkWindow</code> that contains a <code>GtkVBox</code>, which in turn is packed with two widgets: a <code>GtkHBox</code> that contains three buttons (Print, Save As and Quit), and the <code>GtkPlotCanvas</code>. The code itself is pretty straightforward Gtk+, except for the bit that deals with the <code>GtkPlotCanvas</code>. This is a perhaps a good time to mention that I am in no way a GtkExtra expert (or even Gtk+ for that matter&hellip;), and that the following code is the result of my studying of the GtkExtra examples, and the (unfortunately very limited) documentation. Anyway, I&rsquo;ll try and clarify as much as possible&hellip;</p>

<h3>Set up the canvas</h3>

<p>Define a canvas widget that will be used to draw the plot later and give it dimensions that correspond to those of the <a href="http://en.wikipedia.org/wiki/ISO_216">A4 paper size standard</a>. Other sizes are also available (letter, executive and legal), and are defined in <code>gtkplotpc.h</code>.The last parameter of the <code>gtk_plot_canvas_new</code> function is the magnification, which acts a scale factor for the dimensions of the canvas, and will therefore determine the size of the widget in the application. However, it has no impact on the size of the print or the size of the exported image.
Next, I disable the user-interaction with the canvas and its items with the call to <code>GTK_PLOT_CANVAS_UNSET_FLAGS</code>, and I define the <code>GdkColor</code>s that will be used in the plot and canvas. The last call sets explicitly the background color of the canvas to white.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">GtkWidget</span> <span class="o">*</span><span class="n">canvas</span> <span class="o">=</span> <span class="n">gtk_plot_canvas_new</span><span class="p">(</span><span class="n">GTK_PLOT_A4_H</span><span class="p">,</span> <span class="n">GTK_PLOT_A4_W</span><span class="p">,</span> <span class="mf">0.8</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_box_pack_start</span><span class="p">(</span><span class="n">GTK_BOX</span><span class="p">(</span><span class="n">mainbox</span><span class="p">),</span> <span class="n">canvas</span><span class="p">,</span> <span class="n">FALSE</span><span class="p">,</span> <span class="n">FALSE</span><span class="p">,</span> <span class="mi">2</span><span class="p">);</span>
</span><span class='line'><span class="n">GTK_PLOT_CANVAS_UNSET_FLAGS</span><span class="p">(</span><span class="n">GTK_PLOT_CANVAS</span><span class="p">(</span><span class="n">canvas</span><span class="p">),</span> <span class="n">GTK_PLOT_CANVAS_CAN_SELECT</span> <span class="o">|</span> <span class="n">GTK_PLOT_CANVAS_CAN_SELECT_ITEM</span><span class="p">);</span>
</span><span class='line'><span class="n">gdk_color_parse</span><span class="p">(</span><span class="s">&quot;white&quot;</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">white</span><span class="p">);</span>
</span><span class='line'><span class="n">gdk_colormap_alloc_color</span><span class="p">(</span><span class="n">gdk_colormap_get_system</span><span class="p">(),</span> <span class="o">&amp;</span><span class="n">white</span><span class="p">,</span> <span class="n">FALSE</span><span class="p">,</span> <span class="n">TRUE</span><span class="p">);</span>
</span><span class='line'><span class="n">gdk_color_parse</span><span class="p">(</span><span class="s">&quot;red&quot;</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">red</span><span class="p">);</span>
</span><span class='line'><span class="n">gdk_colormap_alloc_color</span><span class="p">(</span><span class="n">gdk_colormap_get_system</span><span class="p">(),</span> <span class="o">&amp;</span><span class="n">red</span><span class="p">,</span> <span class="n">FALSE</span><span class="p">,</span> <span class="n">TRUE</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_canvas_set_background</span><span class="p">(</span><span class="n">GTK_PLOT_CANVAS</span><span class="p">(</span><span class="n">canvas</span><span class="p">),</span><span class="o">&amp;</span><span class="n">white</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Add a plot to the window&hellip;</h3>

<p>The following calls will generate the plot and set its properties.
Most functionnames should be pretty selfexplanatory, especially when combined with the GtkExtra documentation.
I am not entirely confident about <code>gtk_plot_new_with_size</code> though: at least in this example the two last arguments (width and height), appear to have no influence on the result.
Anyway, after constructing the plot to your liking, it must be added to the <code>GtkPlotCanvas</code> that was defined in the previous section.
This is accomplished with the calls to <code>gtk_plot_canvas_plot_new</code> and <code>gtk_plot_canvas_put_child</code>.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">GtkWidget</span> <span class="o">*</span><span class="n">plot_window</span><span class="p">;</span>
</span><span class='line'><span class="n">plot_window</span> <span class="o">=</span> <span class="n">gtk_plot_new_with_size</span><span class="p">(</span><span class="nb">NULL</span><span class="p">,</span><span class="mf">.65</span><span class="p">,</span><span class="mf">.45</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_set_background</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span><span class="o">&amp;</span><span class="n">white</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_hide_legends</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">));</span>
</span><span class='line'>  
</span><span class='line'><span class="n">gtk_plot_set_ticks</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span> <span class="n">GTK_PLOT_AXIS_X</span><span class="p">,</span> <span class="n">M_PI_2</span><span class="p">,</span> <span class="mi">5</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_set_ticks</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span> <span class="n">GTK_PLOT_AXIS_Y</span><span class="p">,</span> <span class="mf">0.2</span><span class="p">,</span> <span class="mi">5</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_grids_set_visible</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span><span class="n">TRUE</span> <span class="p">,</span><span class="n">FALSE</span><span class="p">,</span> <span class="n">TRUE</span><span class="p">,</span><span class="n">FALSE</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_axis_hide_title</span><span class="p">(</span><span class="n">gtk_plot_get_axis</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span> <span class="n">GTK_PLOT_AXIS_TOP</span><span class="p">));</span>
</span><span class='line'><span class="n">gtk_plot_axis_hide_title</span><span class="p">(</span><span class="n">gtk_plot_get_axis</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span> <span class="n">GTK_PLOT_AXIS_RIGHT</span><span class="p">));</span>
</span><span class='line'><span class="n">gtk_plot_axis_set_title</span><span class="p">(</span><span class="n">gtk_plot_get_axis</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span> <span class="n">GTK_PLOT_AXIS_BOTTOM</span><span class="p">),</span><span class="s">&quot;x&quot;</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_axis_set_title</span><span class="p">(</span><span class="n">gtk_plot_get_axis</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span> <span class="n">GTK_PLOT_AXIS_LEFT</span><span class="p">),</span><span class="s">&quot;y=sin(x)&quot;</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_axis_title_set_attributes</span><span class="p">(</span><span class="n">gtk_plot_get_axis</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span> <span class="n">GTK_PLOT_AXIS_LEFT</span><span class="p">),</span><span class="s">&quot;Helvetica&quot;</span><span class="p">,</span><span class="mi">40</span><span class="p">,</span><span class="mi">90</span><span class="p">,</span><span class="nb">NULL</span><span class="p">,</span><span class="nb">NULL</span><span class="p">,</span><span class="n">TRUE</span><span class="p">,</span><span class="n">GTK_JUSTIFY_CENTER</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_axis_title_set_attributes</span><span class="p">(</span><span class="n">gtk_plot_get_axis</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span> <span class="n">GTK_PLOT_AXIS_BOTTOM</span><span class="p">),</span><span class="s">&quot;Helvetica&quot;</span><span class="p">,</span><span class="mi">40</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nb">NULL</span><span class="p">,</span><span class="nb">NULL</span><span class="p">,</span><span class="n">TRUE</span><span class="p">,</span><span class="n">GTK_JUSTIFY_CENTER</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_axis_set_labels_attributes</span><span class="p">(</span><span class="n">gtk_plot_get_axis</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span> <span class="n">GTK_PLOT_AXIS_LEFT</span><span class="p">),</span><span class="s">&quot;Helvetica&quot;</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nb">NULL</span><span class="p">,</span><span class="nb">NULL</span><span class="p">,</span><span class="n">TRUE</span><span class="p">,</span><span class="n">GTK_JUSTIFY_RIGHT</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_axis_set_labels_attributes</span><span class="p">(</span><span class="n">gtk_plot_get_axis</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span> <span class="n">GTK_PLOT_AXIS_RIGHT</span><span class="p">),</span><span class="s">&quot;Helvetica&quot;</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nb">NULL</span><span class="p">,</span><span class="nb">NULL</span><span class="p">,</span><span class="n">TRUE</span><span class="p">,</span><span class="n">GTK_JUSTIFY_LEFT</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_axis_set_labels_attributes</span><span class="p">(</span><span class="n">gtk_plot_get_axis</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span> <span class="n">GTK_PLOT_AXIS_BOTTOM</span><span class="p">),</span><span class="s">&quot;Helvetica&quot;</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nb">NULL</span><span class="p">,</span><span class="nb">NULL</span><span class="p">,</span><span class="n">TRUE</span><span class="p">,</span><span class="n">GTK_JUSTIFY_CENTER</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_axis_show_labels</span><span class="p">(</span><span class="n">gtk_plot_get_axis</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span> <span class="n">GTK_PLOT_AXIS_TOP</span><span class="p">),</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">GtkPlotCanvasChild</span> <span class="o">*</span><span class="n">child</span> <span class="o">=</span> <span class="n">gtk_plot_canvas_plot_new</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">));</span>
</span><span class='line'><span class="n">gtk_plot_canvas_put_child</span><span class="p">(</span><span class="n">GTK_PLOT_CANVAS</span><span class="p">(</span><span class="n">canvas</span><span class="p">),</span> <span class="n">child</span><span class="p">,</span> <span class="mf">.15</span><span class="p">,</span><span class="mf">.05</span><span class="p">,</span><span class="mf">.90</span><span class="p">,</span><span class="mf">.85</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h3>&hellip;and finish off with the data</h3>

<p>So far, we have defined the <code>GtkPlotCanvas</code> and the <code>GtkPlot</code>. The latter currently consists of an empty grid. I made things a bit more interesting by adding a graph of a sine function. The following lines calculate 1000 values of the sine function within the interval [0, 4π], and add them subsequently to a <code>GtkPlotData</code> variable, that in turn is added to the <code>GtkPlot</code> with <code>gtk_plot_add_data</code>
As with the grid in the previous section, it is possible to change the properties of the graph using a few appropriately named functions.
This part of the code finishes by drawing and showing all widgets. I am doing this here with several calls, some of which are definitely unnecessary, but the documentation and examples of GtkExtra are pretty unclear on how to do this (especially when updating, erasing canvases, plots etc). Anyway, calling all of them seems to work just fine :&ndash;)</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="c1">//calculate a sine function</span>
</span><span class='line'><span class="kt">double</span> <span class="o">*</span><span class="n">xvals</span> <span class="o">=</span> <span class="n">g_malloc</span><span class="p">(</span><span class="k">sizeof</span><span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="o">*</span><span class="mi">1000</span><span class="p">);</span>
</span><span class='line'><span class="kt">double</span> <span class="o">*</span><span class="n">yvals</span> <span class="o">=</span> <span class="n">g_malloc</span><span class="p">(</span><span class="k">sizeof</span><span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="o">*</span><span class="mi">1000</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">1000</span> <span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">xvals</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="mi">4</span><span class="o">*</span><span class="n">M_PI</span><span class="o">*</span><span class="n">i</span><span class="o">/</span><span class="mi">999</span><span class="p">;</span>
</span><span class='line'>  <span class="n">yvals</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">sin</span><span class="p">(</span><span class="n">xvals</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="n">GtkPlotData</span> <span class="o">*</span><span class="n">dataset</span><span class="p">;</span>
</span><span class='line'><span class="n">dataset</span> <span class="o">=</span> <span class="n">GTK_PLOT_DATA</span><span class="p">(</span><span class="n">gtk_plot_data_new</span><span class="p">());</span>
</span><span class='line'><span class="n">gtk_plot_add_data</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span><span class="n">dataset</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_data_set_numpoints</span><span class="p">(</span><span class="n">dataset</span><span class="p">,</span> <span class="mi">1000</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_data_set_x</span><span class="p">(</span><span class="n">dataset</span><span class="p">,</span> <span class="n">xvals</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_data_set_y</span><span class="p">(</span><span class="n">dataset</span><span class="p">,</span> <span class="n">yvals</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_set_range</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span><span class="mf">0.0</span><span class="p">,</span> <span class="mi">4</span><span class="o">*</span><span class="n">M_PI</span><span class="p">,</span> <span class="o">-</span><span class="mf">1.0</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_clip_data</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span> <span class="n">TRUE</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_widget_show</span><span class="p">(</span><span class="n">GTK_WIDGET</span><span class="p">(</span><span class="n">dataset</span><span class="p">));</span>
</span><span class='line'><span class="n">gtk_plot_data_set_line_attributes</span><span class="p">(</span><span class="n">dataset</span><span class="p">,</span><span class="n">GTK_PLOT_LINE_SOLID</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="o">&amp;</span><span class="n">red</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_canvas_paint</span><span class="p">(</span><span class="n">GTK_PLOT_CANVAS</span><span class="p">(</span><span class="n">canvas</span><span class="p">));</span>
</span><span class='line'><span class="n">gtk_widget_queue_draw</span><span class="p">(</span><span class="n">GTK_WIDGET</span><span class="p">(</span><span class="n">canvas</span><span class="p">));</span>
</span><span class='line'><span class="n">gtk_plot_canvas_refresh</span><span class="p">(</span><span class="n">GTK_PLOT_CANVAS</span><span class="p">(</span><span class="n">canvas</span><span class="p">));</span>
</span><span class='line'><span class="n">gtk_plot_paint</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">));</span>
</span><span class='line'><span class="n">gtk_plot_refresh</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span><span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">gtk_widget_show_all</span><span class="p">(</span><span class="n">window</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">gtk_main</span><span class="p">();</span> 
</span></code></pre></td></tr></table></div></figure>


<p>After compilation with something like:</p>

<pre><code>gcc -o gtkextra-print-export `pkg-config --cflags gtkextra-3.0` gtkextra-print-export.c `pkg-config --libs gtkextra-3.0`
</code></pre>

<p>and running <code>gtkextra-print-export</code>, you should get something like:</p>

<p><img class="center" src="http://tschoonj.github.io/images/gtkextra.png"></p>

<h2>Printing the canvas</h2>

<p>Both the printing and exporting of the canvas rely on Cairo. The most important function here is <code>gtk_plot_canvas_export_cairo</code>, which accepts a cairo context as argument and will &lsquo;paint&rsquo; the canvas on it. When printing, this cairo context is produced by <code>gtk_print_context_get_cairo_context</code>, as is shown in the following code snippet. It contains both the &lsquo;clicked&rsquo; callback for the Print button, as well as the &lsquo;draw-page&rsquo; callback for the <code>GtkPrintOperation</code>.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">void</span> <span class="nf">draw_page</span><span class="p">(</span><span class="n">GtkPrintOperation</span> <span class="o">*</span><span class="n">operation</span><span class="p">,</span> <span class="n">GtkPrintContext</span> <span class="o">*</span><span class="n">context</span><span class="p">,</span> <span class="n">gint</span> <span class="n">page_nr</span><span class="p">,</span> <span class="k">struct</span> <span class="n">dialogData</span> <span class="o">*</span><span class="n">dd</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">cairo_t</span> <span class="o">*</span><span class="n">cr</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//the following two lines do all the magic</span>
</span><span class='line'>        <span class="n">cr</span> <span class="o">=</span> <span class="n">gtk_print_context_get_cairo_context</span><span class="p">(</span><span class="n">context</span><span class="p">);</span>
</span><span class='line'>        <span class="n">gtk_plot_canvas_export_cairo</span><span class="p">(</span><span class="n">GTK_PLOT_CANVAS</span><span class="p">(</span><span class="n">dd</span><span class="o">-&gt;</span><span class="n">canvas</span><span class="p">),</span><span class="n">cr</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">print_button_clicked_cb</span><span class="p">(</span><span class="n">GtkWidget</span> <span class="o">*</span><span class="n">button</span><span class="p">,</span> <span class="k">struct</span> <span class="n">dialogData</span> <span class="o">*</span><span class="n">dd</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">GtkPrintOperation</span> <span class="o">*</span><span class="n">operation</span><span class="p">;</span>
</span><span class='line'>        <span class="n">GError</span> <span class="o">*</span><span class="n">error</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>        <span class="n">GtkPrintOperationResult</span> <span class="n">res</span><span class="p">;</span>
</span><span class='line'>  <span class="n">GtkPrintSettings</span> <span class="o">*</span><span class="n">print_settings</span><span class="p">;</span>
</span><span class='line'>  <span class="n">GtkPageSetup</span> <span class="o">*</span><span class="n">page_setup</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//print settings</span>
</span><span class='line'>        <span class="n">print_settings</span> <span class="o">=</span> <span class="n">gtk_print_settings_new</span><span class="p">();</span>
</span><span class='line'>        <span class="n">gtk_print_settings_set_orientation</span><span class="p">(</span><span class="n">print_settings</span><span class="p">,</span><span class="n">GTK_PAGE_ORIENTATION_LANDSCAPE</span><span class="p">);</span>
</span><span class='line'>        <span class="n">gtk_print_settings_set_paper_size</span><span class="p">(</span><span class="n">print_settings</span><span class="p">,</span><span class="n">gtk_paper_size_new</span><span class="p">(</span><span class="n">GTK_PAPER_NAME_A4</span><span class="p">));</span>
</span><span class='line'>        <span class="n">page_setup</span> <span class="o">=</span> <span class="n">gtk_page_setup_new</span><span class="p">();</span>
</span><span class='line'>        <span class="n">gtk_page_setup_set_orientation</span><span class="p">(</span><span class="n">page_setup</span><span class="p">,</span><span class="n">GTK_PAGE_ORIENTATION_LANDSCAPE</span><span class="p">);</span>
</span><span class='line'>        <span class="n">gtk_page_setup_set_paper_size_and_default_margins</span><span class="p">(</span><span class="n">page_setup</span><span class="p">,</span><span class="n">gtk_paper_size_new</span><span class="p">(</span><span class="n">GTK_PAPER_NAME_A4</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">operation</span> <span class="o">=</span> <span class="n">gtk_print_operation_new</span><span class="p">();</span>
</span><span class='line'>        <span class="n">gtk_print_operation_set_print_settings</span><span class="p">(</span><span class="n">operation</span><span class="p">,</span><span class="n">print_settings</span><span class="p">);</span>
</span><span class='line'>        <span class="n">gtk_print_operation_set_default_page_setup</span><span class="p">(</span><span class="n">operation</span><span class="p">,</span><span class="n">page_setup</span><span class="p">);</span>
</span><span class='line'>        <span class="n">gtk_print_operation_set_show_progress</span><span class="p">(</span><span class="n">operation</span><span class="p">,</span><span class="n">TRUE</span><span class="p">);</span>
</span><span class='line'>        <span class="n">gtk_print_operation_set_track_print_status</span><span class="p">(</span><span class="n">operation</span><span class="p">,</span> <span class="n">TRUE</span><span class="p">);</span>
</span><span class='line'>        <span class="n">g_signal_connect</span><span class="p">(</span><span class="n">G_OBJECT</span><span class="p">(</span><span class="n">operation</span><span class="p">),</span> <span class="s">&quot;draw-page&quot;</span><span class="p">,</span> <span class="n">G_CALLBACK</span><span class="p">(</span><span class="n">draw_page</span><span class="p">),</span> <span class="n">dd</span><span class="p">);</span>
</span><span class='line'>        <span class="n">gtk_print_operation_set_n_pages</span><span class="p">(</span><span class="n">operation</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">res</span> <span class="o">=</span> <span class="n">gtk_print_operation_run</span><span class="p">(</span><span class="n">operation</span><span class="p">,</span> <span class="n">GTK_PRINT_OPERATION_ACTION_PRINT_DIALOG</span><span class="p">,</span> <span class="n">GTK_WINDOW</span><span class="p">(</span><span class="n">dd</span><span class="o">-&gt;</span><span class="n">window</span><span class="p">),</span><span class="o">&amp;</span><span class="n">error</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">res</span> <span class="o">==</span> <span class="n">GTK_PRINT_OPERATION_RESULT_APPLY</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">g_object_unref</span><span class="p">(</span><span class="n">print_settings</span><span class="p">);</span>
</span><span class='line'>                <span class="n">print_settings</span> <span class="o">=</span> <span class="n">g_object_ref</span><span class="p">(</span><span class="n">gtk_print_operation_get_print_settings</span><span class="p">(</span><span class="n">operation</span><span class="p">));</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="n">g_object_unref</span><span class="p">(</span><span class="n">operation</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Exporting the canvas to a file</h2>

<p>In this example, I have created the possibility to export to Encapsulated PostScript, PDF and PNG. Cairo also offers <a href="http://www.cairographics.org/manual/cairo-SVG-Surfaces.html">SVG support</a>, which may be useful to some. Other fileformats like JPEG may be supported through <a href="http://openil.sourceforge.net">devIL</a>&hellip;</p>

<p>The function in this example is a callback of the Save As button, and pops up a <code>GtkFileChooserDialog</code>, with three <code>GtkFileFilter</code>s, each corresponding to one of the supported fileformats. After selecting a filter and choosing the filename, a cairo surface is created for the selected filetype. Next, a cairo context is created for the surface, which will be used to paint the canvas on using <code>gtk_plot_canvas_export_cairo</code>. Multipage formats such as PostScript and PDF require the extra call to <code>cairo_show_page</code>. The function terminates after destroying the cairo surfaces and contexts.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">void</span> <span class="nf">export_button_clicked_cb</span><span class="p">(</span><span class="n">GtkWidget</span> <span class="o">*</span><span class="n">button</span><span class="p">,</span> <span class="k">struct</span> <span class="n">dialogData</span> <span class="o">*</span><span class="n">dd</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">GtkWidget</span> <span class="o">*</span><span class="n">dialog</span><span class="p">;</span>
</span><span class='line'>        <span class="n">GtkFileFilter</span> <span class="o">*</span><span class="n">filter</span><span class="p">;</span>
</span><span class='line'>        <span class="n">gchar</span> <span class="o">*</span><span class="n">filename</span><span class="p">;</span>
</span><span class='line'>        <span class="n">cairo_t</span> <span class="o">*</span><span class="n">cr</span><span class="p">;</span>
</span><span class='line'>        <span class="n">cairo_surface_t</span> <span class="o">*</span><span class="n">surface</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">dialog</span> <span class="o">=</span> <span class="n">gtk_file_chooser_dialog_new</span><span class="p">(</span><span class="s">&quot;Export spectra&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="n">GTK_WINDOW</span><span class="p">(</span><span class="n">dd</span><span class="o">-&gt;</span><span class="n">window</span><span class="p">),</span> <span class="n">GTK_FILE_CHOOSER_ACTION_SAVE</span><span class="p">,</span>
</span><span class='line'>                <span class="n">GTK_STOCK_CANCEL</span><span class="p">,</span> <span class="n">GTK_RESPONSE_CANCEL</span><span class="p">,</span>
</span><span class='line'>                <span class="n">GTK_STOCK_SAVE</span><span class="p">,</span> <span class="n">GTK_RESPONSE_ACCEPT</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">gtk_file_chooser_set_do_overwrite_confirmation</span> <span class="p">(</span><span class="n">GTK_FILE_CHOOSER</span> <span class="p">(</span><span class="n">dialog</span><span class="p">),</span> <span class="n">TRUE</span><span class="p">);</span>
</span><span class='line'>        <span class="n">filter</span> <span class="o">=</span> <span class="n">gtk_file_filter_new</span><span class="p">();</span>
</span><span class='line'>        <span class="n">gtk_file_filter_add_pattern</span><span class="p">(</span><span class="n">filter</span><span class="p">,</span><span class="s">&quot;*.eps&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">gtk_file_filter_set_name</span><span class="p">(</span><span class="n">filter</span><span class="p">,</span><span class="s">&quot;EPS (Encapsulated PostScript)&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">gtk_file_chooser_add_filter</span><span class="p">(</span><span class="n">GTK_FILE_CHOOSER</span><span class="p">(</span><span class="n">dialog</span><span class="p">),</span> <span class="n">filter</span><span class="p">);</span>
</span><span class='line'>        <span class="n">filter</span> <span class="o">=</span> <span class="n">gtk_file_filter_new</span><span class="p">();</span>
</span><span class='line'>        <span class="n">gtk_file_filter_add_pattern</span><span class="p">(</span><span class="n">filter</span><span class="p">,</span><span class="s">&quot;*.pdf&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">gtk_file_filter_set_name</span><span class="p">(</span><span class="n">filter</span><span class="p">,</span><span class="s">&quot;PDF (Adobe Portable Document Format)&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">gtk_file_chooser_add_filter</span><span class="p">(</span><span class="n">GTK_FILE_CHOOSER</span><span class="p">(</span><span class="n">dialog</span><span class="p">),</span> <span class="n">filter</span><span class="p">);</span>
</span><span class='line'>        <span class="n">filter</span> <span class="o">=</span> <span class="n">gtk_file_filter_new</span><span class="p">();</span>
</span><span class='line'>        <span class="n">gtk_file_filter_add_pattern</span><span class="p">(</span><span class="n">filter</span><span class="p">,</span><span class="s">&quot;*.png&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">gtk_file_filter_set_name</span><span class="p">(</span><span class="n">filter</span><span class="p">,</span><span class="s">&quot;PNG (Portable Network Graphics)&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">gtk_file_chooser_add_filter</span><span class="p">(</span><span class="n">GTK_FILE_CHOOSER</span><span class="p">(</span><span class="n">dialog</span><span class="p">),</span> <span class="n">filter</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">gtk_dialog_run</span><span class="p">(</span><span class="n">GTK_DIALOG</span><span class="p">(</span><span class="n">dialog</span><span class="p">))</span> <span class="o">==</span> <span class="n">GTK_RESPONSE_ACCEPT</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">filename</span> <span class="o">=</span> <span class="n">gtk_file_chooser_get_filename</span><span class="p">(</span><span class="n">GTK_FILE_CHOOSER</span><span class="p">(</span><span class="n">dialog</span><span class="p">));</span>
</span><span class='line'>                <span class="c1">//get selected filter</span>
</span><span class='line'>                <span class="n">filter</span> <span class="o">=</span> <span class="n">gtk_file_chooser_get_filter</span><span class="p">(</span><span class="n">GTK_FILE_CHOOSER</span><span class="p">(</span><span class="n">dialog</span><span class="p">));</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">strncmp</span><span class="p">(</span><span class="n">gtk_file_filter_get_name</span><span class="p">(</span><span class="n">filter</span><span class="p">),</span><span class="s">&quot;EPS&quot;</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                        <span class="k">if</span> <span class="p">(</span><span class="n">strcmp</span><span class="p">(</span><span class="n">filename</span><span class="o">+</span><span class="n">strlen</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span><span class="o">-</span><span class="mi">4</span><span class="p">,</span> <span class="s">&quot;.eps&quot;</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                                <span class="n">filename</span> <span class="o">=</span> <span class="p">(</span><span class="n">gchar</span> <span class="o">*</span><span class="p">)</span> <span class="n">g_realloc</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">gchar</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="n">strlen</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span><span class="o">+</span><span class="mi">4</span><span class="p">));</span>
</span><span class='line'>                                <span class="n">strcat</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span><span class="s">&quot;.eps&quot;</span><span class="p">);</span>
</span><span class='line'>                        <span class="p">}</span>
</span><span class='line'>                        <span class="n">surface</span> <span class="o">=</span> <span class="n">cairo_ps_surface_create</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span><span class="mi">842</span><span class="p">,</span><span class="mi">595</span><span class="p">);</span>
</span><span class='line'>                        <span class="n">cairo_ps_surface_set_eps</span><span class="p">(</span><span class="n">surface</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>                        <span class="n">cr</span> <span class="o">=</span> <span class="n">cairo_create</span><span class="p">(</span><span class="n">surface</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>                        <span class="n">gtk_plot_canvas_export_cairo</span><span class="p">(</span><span class="n">GTK_PLOT_CANVAS</span><span class="p">(</span><span class="n">dd</span><span class="o">-&gt;</span><span class="n">canvas</span><span class="p">),</span><span class="n">cr</span><span class="p">);</span>
</span><span class='line'>                        <span class="n">cairo_show_page</span><span class="p">(</span><span class="n">cr</span><span class="p">);</span>
</span><span class='line'>                        <span class="n">cairo_surface_destroy</span><span class="p">(</span><span class="n">surface</span><span class="p">);</span>
</span><span class='line'>                        <span class="n">cairo_destroy</span><span class="p">(</span><span class="n">cr</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>      <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">strncmp</span><span class="p">(</span><span class="n">gtk_file_filter_get_name</span><span class="p">(</span><span class="n">filter</span><span class="p">),</span><span class="s">&quot;PDF&quot;</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                        <span class="k">if</span> <span class="p">(</span><span class="n">strcmp</span><span class="p">(</span><span class="n">filename</span><span class="o">+</span><span class="n">strlen</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span><span class="o">-</span><span class="mi">4</span><span class="p">,</span> <span class="s">&quot;.pdf&quot;</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                                <span class="n">filename</span> <span class="o">=</span> <span class="p">(</span><span class="n">gchar</span> <span class="o">*</span><span class="p">)</span> <span class="n">g_realloc</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">gchar</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="n">strlen</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span><span class="o">+</span><span class="mi">4</span><span class="p">));</span>
</span><span class='line'>                                <span class="n">strcat</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span><span class="s">&quot;.pdf&quot;</span><span class="p">);</span>
</span><span class='line'>                        <span class="p">}</span>
</span><span class='line'>                        <span class="n">surface</span> <span class="o">=</span> <span class="n">cairo_pdf_surface_create</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span><span class="mf">842.0</span><span class="p">,</span><span class="mf">595.0</span><span class="p">);</span>
</span><span class='line'>                        <span class="n">cr</span> <span class="o">=</span> <span class="n">cairo_create</span><span class="p">(</span><span class="n">surface</span><span class="p">);</span>
</span><span class='line'>                        <span class="n">gtk_plot_canvas_export_cairo</span><span class="p">(</span><span class="n">GTK_PLOT_CANVAS</span><span class="p">(</span><span class="n">dd</span><span class="o">-&gt;</span><span class="n">canvas</span><span class="p">),</span><span class="n">cr</span><span class="p">);</span>
</span><span class='line'>                        <span class="n">cairo_show_page</span><span class="p">(</span><span class="n">cr</span><span class="p">);</span>
</span><span class='line'>                        <span class="n">cairo_surface_destroy</span><span class="p">(</span><span class="n">surface</span><span class="p">);</span>
</span><span class='line'>                        <span class="n">cairo_destroy</span><span class="p">(</span><span class="n">cr</span><span class="p">);</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>                <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">strncmp</span><span class="p">(</span><span class="n">gtk_file_filter_get_name</span><span class="p">(</span><span class="n">filter</span><span class="p">),</span><span class="s">&quot;PNG&quot;</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                        <span class="k">if</span> <span class="p">(</span><span class="n">strcmp</span><span class="p">(</span><span class="n">filename</span><span class="o">+</span><span class="n">strlen</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span><span class="o">-</span><span class="mi">4</span><span class="p">,</span> <span class="s">&quot;.png&quot;</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                                <span class="n">filename</span> <span class="o">=</span> <span class="p">(</span><span class="n">gchar</span> <span class="o">*</span><span class="p">)</span> <span class="n">g_realloc</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">gchar</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="n">strlen</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span><span class="o">+</span><span class="mi">4</span><span class="p">));</span>
</span><span class='line'>                                <span class="n">strcat</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span><span class="s">&quot;.png&quot;</span><span class="p">);</span>
</span><span class='line'>                        <span class="p">}</span>
</span><span class='line'>                        <span class="n">surface</span> <span class="o">=</span> <span class="n">cairo_image_surface_create</span><span class="p">(</span><span class="n">CAIRO_FORMAT_ARGB32</span><span class="p">,</span> <span class="mi">842</span><span class="p">,</span> <span class="mi">595</span><span class="p">);</span>
</span><span class='line'>                        <span class="n">cr</span> <span class="o">=</span> <span class="n">cairo_create</span><span class="p">(</span><span class="n">surface</span><span class="p">);</span>
</span><span class='line'>                        <span class="n">gtk_plot_canvas_export_cairo</span><span class="p">(</span><span class="n">GTK_PLOT_CANVAS</span><span class="p">(</span><span class="n">dd</span><span class="o">-&gt;</span><span class="n">canvas</span><span class="p">),</span><span class="n">cr</span><span class="p">);</span>
</span><span class='line'>                        <span class="n">cairo_surface_write_to_png</span><span class="p">(</span><span class="n">surface</span><span class="p">,</span><span class="n">filename</span><span class="p">);</span>
</span><span class='line'>                        <span class="n">cairo_surface_destroy</span><span class="p">(</span><span class="n">surface</span><span class="p">);</span>
</span><span class='line'>                        <span class="n">cairo_destroy</span><span class="p">(</span><span class="n">cr</span><span class="p">);</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>                <span class="n">g_free</span><span class="p">(</span><span class="n">filename</span><span class="p">);</span>
</span><span class='line'>                <span class="n">gtk_widget_destroy</span><span class="p">(</span><span class="n">dialog</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>                <span class="n">gtk_widget_destroy</span><span class="p">(</span><span class="n">dialog</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>The code</h2>

<p>This is the full code: feel free to hack away at it.
It is taken from <a href="https://github.com/tschoonj/xmimsim/blob/master/bin/xmimsim-gui-results.c">xmimsim-gui-results.c</a>, which contains a lot more GtkExtra related code: drawing lines, changing graph properties, hiding data etc.
Keep in mind that up to today, GtkExtra is still only compatible with Gtk2. However, the developers are actively working on providing Gtk3 support as well. Any help in accomplishing this transition would be greatly appreciated!</p>

<div><script src='https://gist.github.com/6040427.js'></script>
<noscript><pre><code></code></pre></noscript></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Checking for updates using git tags]]></title>
    <link href="http://tschoonj.github.io/blog/2013/07/08/checking-for-updates-using-git-tags/"/>
    <updated>2013-07-08T19:39:00+02:00</updated>
    <id>http://tschoonj.github.io/blog/2013/07/08/checking-for-updates-using-git-tags</id>
    <content type="html"><![CDATA[<p>At some point during the development of version 2.0 of my software package <a href="http://github.com/tschoonj/xmimsim">XMI-MSIM</a>, I decided to implement a routine that would allow for the program to check if newer versions (updates) were available. This would be extremely useful for the users of the Windows and Mac OS X builds of my package, since these operating systems do not come with package-management tools as most Linux distributions do (I am staying far away from Mac App Store and Windows store as I am not willing to pay their developer fees).</p>

<p>Initially I was looking at <a href="http://sparkle.andymatuschak.org">Sparkle</a>, a fantastic tool for OS X apps.
However, this would mean a different solution for my Windows build&hellip;</p>

<p>Since my goal is to keep the platform specific code as low as possible (#ifdef&rsquo;s really are quite ugly things), obviously I had to come up with a different solution.</p>

<!--more-->


<h2>Getting the tags with curl</h2>

<p>In a rare moment of clarity, I came up with the idea of using git tags for this. Like most people, I am using the tags to indicate releases, and as a rule I include the version number in the tagname (e.g. XMI-MSIM-1.0). My method consists of having a routine called <code>check_for_updates</code> (what&rsquo;s in a name?), download the list of tags from github.com (using the <a href="http://developer.github.com/v3/git/tags/">github v3 API for tags</a>). As I was writing (this part of) my application XMI-MSIM in C, I was looking for a library that could easily accomplish this. The quest yielded <a href="http://curl.haxx.se">libcurl</a>, an extremely versatile tool for transferring data using many, many protocols. The code I used for this was something like (full code at the end of this post):</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'>    <span class="c1">//this line is obviously specific to your github account name and project name.</span>
</span><span class='line'>  <span class="c1">//Change it accordingly</span>
</span><span class='line'>  <span class="err">#</span><span class="n">define</span> <span class="n">XMIMSIM_GITHUB_TAGS_LOCATION</span> <span class="s">&quot;https://api.github.com/repos/tschoonj/xmimsim/git/refs/tags&quot;</span>
</span><span class='line'>
</span><span class='line'>        <span class="kt">char</span> <span class="n">curlerrors</span><span class="p">[</span><span class="n">CURL_ERROR_SIZE</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="n">CURL</span> <span class="o">*</span><span class="n">curl</span><span class="p">;</span>
</span><span class='line'>        <span class="n">CURLcode</span> <span class="n">res</span><span class="p">;</span>
</span><span class='line'>        <span class="k">struct</span> <span class="n">MemoryStruct</span> <span class="n">chunk</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">chunk</span><span class="p">.</span><span class="n">memory</span> <span class="o">=</span> <span class="n">malloc</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>        <span class="n">chunk</span><span class="p">.</span><span class="n">size</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">fprintf</span><span class="p">(</span><span class="n">stdout</span><span class="p">,</span><span class="s">&quot;checking for updates...</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//setup curl</span>
</span><span class='line'>        <span class="n">curl</span> <span class="o">=</span> <span class="n">curl_easy_init</span><span class="p">();</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">curl</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span><span class="s">&quot;Could not initialize cURL</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>                <span class="k">return</span> <span class="n">XMIMSIM_UPDATES_ERROR</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">curl_easy_setopt</span><span class="p">(</span><span class="n">curl</span><span class="p">,</span> <span class="n">CURLOPT_URL</span><span class="p">,</span><span class="n">XMIMSIM_GITHUB_TAGS_LOCATION</span><span class="p">);</span>
</span><span class='line'>        <span class="n">curl_easy_setopt</span><span class="p">(</span><span class="n">curl</span><span class="p">,</span> <span class="n">CURLOPT_SSL_VERIFYPEER</span><span class="p">,</span> <span class="mi">0L</span><span class="p">);</span>
</span><span class='line'>        <span class="n">curl_easy_setopt</span><span class="p">(</span><span class="n">curl</span><span class="p">,</span> <span class="n">CURLOPT_WRITEFUNCTION</span><span class="p">,</span> <span class="n">WriteMemoryCallback</span><span class="p">);</span>
</span><span class='line'>        <span class="n">curl_easy_setopt</span><span class="p">(</span><span class="n">curl</span><span class="p">,</span> <span class="n">CURLOPT_WRITEDATA</span><span class="p">,</span> <span class="p">(</span><span class="kt">void</span> <span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">chunk</span><span class="p">);</span>
</span><span class='line'>        <span class="n">curl_easy_setopt</span><span class="p">(</span><span class="n">curl</span><span class="p">,</span> <span class="n">CURLOPT_USERAGENT</span><span class="p">,</span> <span class="s">&quot;libcurl-agent/1.0&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">curl_easy_setopt</span><span class="p">(</span><span class="n">curl</span><span class="p">,</span> <span class="n">CURLOPT_ERRORBUFFER</span><span class="p">,</span> <span class="n">curlerrors</span><span class="p">);</span>
</span><span class='line'>        <span class="n">curl_easy_setopt</span><span class="p">(</span><span class="n">curl</span><span class="p">,</span> <span class="n">CURLOPT_CONNECTTIMEOUT</span><span class="p">,</span> <span class="mi">4L</span><span class="p">);</span>
</span><span class='line'>        <span class="n">res</span> <span class="o">=</span> <span class="n">curl_easy_perform</span><span class="p">(</span><span class="n">curl</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">res</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span><span class="s">&quot;check_for_updates: %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">curlerrors</span><span class="p">);</span>
</span><span class='line'>                <span class="k">return</span> <span class="n">XMIMSIM_UPDATES_ERROR</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">curl_easy_cleanup</span><span class="p">(</span><span class="n">curl</span><span class="p">);</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<h2>Parse the JSON code with Json-Glib and compare versions</h2>

<p>The buffer that is returned in <code>chunk</code>, contains JSON code. To parse this, I used the Json-Glib library, a logical choice since my project is written in Gtk+ anyway&hellip; Code extract:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'>    <span class="n">parser</span> <span class="o">=</span> <span class="n">json_parser_new</span><span class="p">();</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">json_parser_load_from_data</span><span class="p">(</span><span class="n">parser</span><span class="p">,</span> <span class="n">chunk</span><span class="p">.</span><span class="n">memory</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="o">&amp;</span><span class="n">error</span><span class="p">)</span> <span class="o">==</span>  <span class="n">FALSE</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                        <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span><span class="s">&quot;check_for_updates: %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">error</span><span class="o">-&gt;</span><span class="n">message</span><span class="p">);</span>
</span><span class='line'>                        <span class="k">return</span> <span class="n">XMIMSIM_UPDATES_ERROR</span><span class="p">;</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">JsonNode</span> <span class="o">*</span><span class="n">rootNode</span> <span class="o">=</span> <span class="n">json_parser_get_root</span><span class="p">(</span><span class="n">parser</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">json_node_get_node_type</span><span class="p">(</span><span class="n">rootNode</span><span class="p">)</span> <span class="o">!=</span> <span class="n">JSON_NODE_ARRAY</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span><span class="s">&quot;check_for_updates: rootNode is not an Array</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>                <span class="k">return</span> <span class="n">XMIMSIM_UPDATES_ERROR</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">JsonArray</span> <span class="o">*</span><span class="n">rootArray</span> <span class="o">=</span> <span class="n">json_node_get_array</span><span class="p">(</span><span class="n">rootNode</span><span class="p">);</span>
</span><span class='line'>        <span class="kt">char</span> <span class="o">*</span><span class="n">max_version</span> <span class="o">=</span> <span class="n">g_strdup</span><span class="p">(</span><span class="n">PACKAGE_VERSION</span><span class="p">);</span>
</span><span class='line'>        <span class="kt">char</span> <span class="o">*</span><span class="n">current_version</span> <span class="o">=</span> <span class="n">g_strdup</span><span class="p">(</span><span class="n">max_version</span><span class="p">);</span>
</span><span class='line'>        <span class="n">json_array_foreach_element</span><span class="p">(</span><span class="n">rootArray</span><span class="p">,</span> <span class="p">(</span><span class="n">JsonArrayForeach</span><span class="p">)</span> <span class="n">check_version_of_tag</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">max_version</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kt">int</span> <span class="n">rv</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">g_ascii_strtod</span><span class="p">(</span><span class="n">max_version</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">)</span> <span class="o">&gt;</span> <span class="n">g_ascii_strtod</span><span class="p">(</span><span class="n">current_version</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">))</span>
</span><span class='line'>                <span class="n">rv</span> <span class="o">=</span> <span class="n">XMIMSIM_UPDATES_AVAILABLE</span><span class="p">;</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>                <span class="n">rv</span> <span class="o">=</span> <span class="n">XMIMSIM_UPDATES_NONE</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="o">*</span><span class="n">max_version_rv</span> <span class="o">=</span> <span class="n">strdup</span><span class="p">(</span><span class="n">g_strstrip</span><span class="p">(</span><span class="n">max_version</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">g_object_unref</span><span class="p">(</span><span class="n">parser</span><span class="p">);</span>
</span><span class='line'>        <span class="n">fprintf</span><span class="p">(</span><span class="n">stdout</span><span class="p">,</span><span class="s">&quot;done checking for updates</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Important here is the <code>json_array_foreach_element</code> function, which will call <code>check_version_of_tag</code> for each tag, and update the highest found tag version number with each iteration.</p>

<p>After this, all that needs to be done is to compare this highest tag version with the internal version number (<code>PACKAGE_VERSION</code>, typically provided by a configure script), and the result is returned.</p>

<p>Now the method that I just described assumes that the version numbering is done with one major number and one minor number, allowing me to easily convert into a float for version comparison. Although this is sufficient for my personal needs, others may have to come up with a slightly more complex algorithm allowing to compare version numbers consisting of a major, minor and macro version number.</p>

<h2>The code</h2>

<p>This is the full code: feel free to hack away at it.
It is taken from <a href="https://github.com/tschoonj/xmimsim/blob/master/bin/xmimsim-gui-updater.c">xmimsim-gui-updater.c</a>, which also contains code to download the new packages from a webserver (also using curl).</p>

<div><script src='https://gist.github.com/5951294.js'></script>
<noscript><pre><code></code></pre></noscript></div>



]]></content>
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[The Code Dungeon]]></title>
  <link href="http://tschoonj.github.io/atom.xml" rel="self"/>
  <link href="http://tschoonj.github.io/"/>
  <updated>2014-09-29T13:31:57+01:00</updated>
  <id>http://tschoonj.github.io/</id>
  <author>
    <name><![CDATA[Tom Schoonjans]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Gtk2 64-bit Windows Runtime Environment Installer: now on GitHub!]]></title>
    <link href="http://tschoonj.github.io/blog/2014/09/29/gtk2-64-bit-windows-runtime-environment-installer-now-on-github/"/>
    <updated>2014-09-29T12:33:58+01:00</updated>
    <id>http://tschoonj.github.io/blog/2014/09/29/gtk2-64-bit-windows-runtime-environment-installer-now-on-github</id>
    <content type="html"><![CDATA[<p>As predicted in my <a href="http://tschoonj.github.io/blog/2014/02/08/gtk2-64-bit-windows-runtime-environment-installer/">first post</a> on the Gtk2 64-bit Windows Runtime Environment Installer, I have indeed ventured into compiling Gtk (2.24.24) and all its dependencies, mainly because I was getting increasingly unhappy with the old Gtk 2.22.1 based bundle that <a href="http://www.gtk.org/download/win64.php">is being distributed</a> by the Gtk project. It was in fact this very bundle that I was using to generate the installer I announced in my first post on this subject.</p>

<p>So, after spending about 10 hours of compiling (and recompiling a couple of times when I didn&rsquo;t get the configure options right) of more than a dozen software packages, I ended up with a fully working (at least until now&hellip;) collection of DLLs. I updated the code from my initial installer to include the new DLLs and uploaded the new installer <a href="http://lvserver.ugent.be/gtk-win64/">here</a>. I also uploaded a zip-file (sdk) containing all executables, DLLs, linking libraries (.dll.a) and headers, that can be used by anyone not willing to replicate my compilation effort. In fact I recommend that people using this installer to distribute the Gtk runtime along with their own program, to compile and link against this sdk, in order to avoid any link issues at runtime&hellip;</p>

<p>You may notice that I did not use the exact same dependencies in my compilation stack as those offered by the official Gtk bundle. I followed the <a href="http://hexchat.github.io/gtk-win32/">Hexchat flowchart</a> and ended up with additional dependencies of libffi and harfbuzz. libexpat was replaced by libxml2. This explains why the new installer is considerably larger than the previous one.</p>

<p>Last but not least, I forked the original repository of the installer from <a href="http://sourceforge.net/projects/gtk-win/">its sourceforge</a> repository and created my own personal copy on <a href="https://github.com/tschoonj/GTK-for-Windows-Runtime-Environment-Installer">GitHub</a>. Check the README file for more information.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Building a CUDA device function library with autotools]]></title>
    <link href="http://tschoonj.github.io/blog/2014/05/10/building-a-cuda-device-function-library-with-autotools/"/>
    <updated>2014-05-10T14:08:11+01:00</updated>
    <id>http://tschoonj.github.io/blog/2014/05/10/building-a-cuda-device-function-library-with-autotools</id>
    <content type="html"><![CDATA[<p>I have recently started a new development branch in my <a href="http://github.com/tschoonj/xraylib">xraylib</a> project, where I will gradually be adding support for <a href="https://developer.nvidia.com/about-cuda">nVidia&rsquo;s CUDA platform</a>. Essentially the goal is to create a library containing CUDA device function equivalents of most functions that are currently offered by xraylib. Since there is not really much point to include functions that deal with strings, I will be leaving those out.</p>

<p>Compiling such a library has been supported by nVidia since CUDA version 5.5, but for some reason I never got their examples working. However, their recent 6.0 release seems to have fixed things (at least for me). In this post I will share some of the tricks I had to come up with to generate such a library.</p>

<!--more-->


<h2>Adding configure CUDA support</h2>

<p>The configure script that I am using for xraylib allows the user to select which bindings to build. The script would then proceed with checking if all the necessary building dependencies are available on the system. I accomplished this using the <code>AX_CHECK_CUDA</code> m4 macro I found at <a href="http://wili.cc/blog/cuda-m4.html,">http://wili.cc/blog/cuda-m4.html,</a> of course with some modifications to suit my particular needs. Check the gist later in this post for the code.</p>

<p>Important here are the <code>NVCC</code>, <code>CUDA_CFLAGS</code>, <code>CUDA_LDFLAGS</code> and <code>CUDA_LIBDIR</code> variables that get defined and will be used in the Makefile.am&rsquo;s later on.</p>

<h2>Building the library</h2>

<p>Compiling CUDA code into a library and then linking this library into an executable is not a trivial task, which becomes clear after reading through the <a href="http://docs.nvidia.com/cuda/cuda-compiler-driver-nvcc/index.html#using-separate-compilation-in-cuda">CUDA documentation on separate compilation</a>.
First of all, we can only create static libraries.
This is not nearly as bad is at sounds: it will make the Makefile.am considerably simpler since we will be able to avoid using libtool this way. Libtool would really make things difficult here since we have to use the nvcc command with its non-standard options and have to define custom compilation rules for our source code files, at least assuming you follow the convention of giving your CUDA source files the .cu extension. In my case I ended up with this code:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='makefile'><span class='line'><span class="nv">xraylibincludedir</span> <span class="o">=</span> <span class="k">${</span><span class="nv">includedir</span><span class="k">}</span>/xraylib
</span><span class='line'>
</span><span class='line'><span class="err">if</span> <span class="err">ENABLE_CUDA</span>
</span><span class='line'><span class="nv">lib_LIBRARIES</span><span class="o">=</span>libxrlcuda.a
</span><span class='line'><span class="nv">xraylibinclude_HEADERS</span> <span class="o">=</span> xraylib-cuda.h
</span><span class='line'><span class="nv">libxrlcuda_a_SOURCES</span> <span class="o">=</span> xraylib-cuda.cu xraylib-cuda.h <span class="se">\</span>
</span><span class='line'>             xraylib-cuda-private.h <span class="se">\</span>
</span><span class='line'>             atomiclevelwidth.cu <span class="se">\</span>
</span><span class='line'>             atomicweight.cu <span class="se">\</span>
</span><span class='line'>             auger_trans.cu <span class="se">\</span>
</span><span class='line'>             comptonprofiles.cu <span class="se">\</span>
</span><span class='line'>             coskron.cu <span class="se">\</span>
</span><span class='line'>             cross_sections.cu <span class="se">\</span>
</span><span class='line'>             densities.cu <span class="se">\</span>
</span><span class='line'>             edges.cu <span class="se">\</span>
</span><span class='line'>             <span class="k">fi</span>.cu <span class="se">\</span>
</span><span class='line'>             fii.cu <span class="se">\</span>
</span><span class='line'>             fluor_yield.cu <span class="se">\</span>
</span><span class='line'>             jump.cu <span class="se">\</span>
</span><span class='line'>             radrate.cu <span class="se">\</span>
</span><span class='line'>             scattering.cu <span class="se">\</span>
</span><span class='line'>             kissel_pe.cu <span class="se">\</span>
</span><span class='line'>             xrf_cross_sections_aux.cu <span class="se">\</span>
</span><span class='line'>             cs_line.cu <span class="se">\</span>
</span><span class='line'>             splint.cu <span class="se">\</span>
</span><span class='line'>             fluor_lines.cu <span class="se">\</span>
</span><span class='line'>             polarized.cu <span class="se">\</span>
</span><span class='line'>             cs_barns.cu
</span><span class='line'><span class="nv">libxrlcuda_a_CFLAGS</span> <span class="o">=</span> <span class="k">$(</span>CUDA_CFLAGS<span class="k">)</span> -I<span class="k">$(</span>top_srcdir<span class="k">)</span>/src -I<span class="k">$(</span>top_srcdir<span class="k">)</span>/include
</span><span class='line'><span class="nv">libxrlcuda_a_AR</span> <span class="o">=</span> <span class="k">$(</span>NVCC<span class="k">)</span> -arch<span class="o">=</span>sm_20 -lib -o
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nf">.cu.o</span><span class="o">:</span> <span class="m">xraylib-cuda.h xraylib-cuda-private.h</span>
</span><span class='line'>  <span class="k">$(</span>NVCC<span class="k">)</span> <span class="k">$(</span>libxrlcuda_a_CFLAGS<span class="k">)</span> -arch<span class="o">=</span>sm_20 -dc -o <span class="nv">$@</span> <span class="nv">$&lt;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">endif</span>
</span></code></pre></td></tr></table></div></figure>


<p>Note how I disabled libtool here: I included the <code>lib_LIBRARIES</code> variable instead of <code>lib_LTLIBRARIES</code>. This two letter difference will ensure that libtool is not being used!
Two other things really set this file apart from typical Makefile.am&rsquo;s:</p>

<ol>
<li><code>libxrlcuda_a_AR = $(NVCC) -arch=sm_20 -lib -o</code>: I am overriding the default archiver here to ensure that both the device and the host functions end up in the static library. The regular archiver (<code>ar</code>) would have ignored the device functions.</li>
<li>The rule for building the CUDA source code: automake has no idea what to do with the .cu files. Enters the suffix rule:</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='makefile'><span class='line'><span class="nf">.cu.o</span><span class="o">:</span> <span class="m">xraylib-cuda.h xraylib-cuda-private.h</span>
</span><span class='line'>  <span class="k">$(</span>NVCC<span class="k">)</span> <span class="k">$(</span>libxrlcuda_a_CFLAGS<span class="k">)</span> -arch<span class="o">=</span>sm_20 -dc -o <span class="nv">$@</span> <span class="nv">$&lt;</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>Here, the <code>-dc</code> option ensures that both device and host code will get compiled into the objects.</p>

<h2>Linking an executable with the library</h2>

<p>xraylib contains an example folder with a Makefile.am that will handle the compilation and running of the examples whenever <code>make check</code> is invoked after successful building of the core library and its bindings. The example contains both device (CUDA kernels that use the device functions) as well as host code to launch the kernels and handle the I/O with the GPU.
Here are the relevant sections of this file that deal with the cuda bindings example:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='makefile'><span class='line'><span class="err">if</span> <span class="err">ENABLE_CUDA</span>
</span><span class='line'>  <span class="nv">check_PROGRAMS</span> <span class="o">+=</span> xrlexample11
</span><span class='line'><span class="cp">endif</span>
</span><span class='line'>
</span><span class='line'><span class="err">if</span> <span class="err">ENABLE_CUDA</span>
</span><span class='line'>  <span class="nv">xrlexample11_SOURCES</span> <span class="o">=</span> xrlexample11.cu
</span><span class='line'>  <span class="nv">xrlexample11_LDADD</span> <span class="o">=</span> xrlcudalink.o ../src/libxrl.la  <span class="k">$(</span>CUDA_LDFLAGS<span class="k">)</span> ../cuda/libxrlcuda.a -lcudart
</span><span class='line'>  <span class="nv">xrlexample11_CFLAGS</span> <span class="o">=</span> -I<span class="k">${</span><span class="nv">top_srcdir</span><span class="k">}</span>/include -I<span class="k">${</span><span class="nv">top_builddir</span><span class="k">}</span>/include -I<span class="k">${</span><span class="nv">top_srcdir</span><span class="k">}</span>/cuda -I<span class="k">${</span><span class="nv">top_srcdir</span><span class="k">}</span>/src
</span><span class='line'>  <span class="nv">TESTS_ENVIRONMENT</span> <span class="o">=</span> <span class="nv">DYLD_LIBRARY_PATH</span><span class="o">=</span><span class="s2">&quot;$(CUDA_LIBDIR)&quot;</span> <span class="nv">LD_LIBRARY_PATH</span><span class="o">=</span><span class="s2">&quot;$(CUDA_LIBDIR)&quot;</span>
</span><span class='line'><span class="cp">endif</span>
</span><span class='line'>
</span><span class='line'><span class="nf">.cu.o</span><span class="o">:</span> <span class="m">../cuda/libxrlcuda.a</span>
</span><span class='line'>  <span class="k">$(</span>NVCC<span class="k">)</span> <span class="k">$(</span>xrlexample11_CFLAGS<span class="k">)</span> -arch<span class="o">=</span>sm_20 -dc -o <span class="nv">$@</span> <span class="nv">$&lt;</span>
</span><span class='line'>
</span><span class='line'><span class="nf">xrlcudalink.o</span><span class="o">:</span> <span class="m">xrlexample11.o ../cuda/libxrlcuda.a</span>
</span><span class='line'>  <span class="k">$(</span>NVCC<span class="k">)</span> -arch<span class="o">=</span>sm_20 -dlink xrlexample11.o ../cuda/libxrlcuda.a -o xrlcudalink.o
</span></code></pre></td></tr></table></div></figure>


<p>It&rsquo;s quite similar to the Makefile.am for the static library: the exact same build rule is required to compile the CUDA source code. Interesting is the <code>xrlcudalink.o</code> build rule which turns out to be essential to link the device code in the example with the device code in the library. The resulting file after linking needs to be added to the <code>LDADD</code> command to ensure it ends up in the eventual executable. I am not overriding the linker here, so the default one will be used which is just fine.</p>

<p>I have tested this on Mac OS X Mavericks and Linux Centos 6.5, both with CUDA 6.0 installed. Soon I will also give this a try on Windows 7, so expect an update soon.</p>

<div><script src='https://gist.github.com/a3b1c346d1cef1cf2a23.js'></script>
<noscript><pre><code>##### 
#
# SYNOPSIS
#
# AX_CHECK_CUDA
#
# DESCRIPTION
#
# Figures out if CUDA Driver API/nvcc is available, i.e. existence of:
#   cuda.h
#   libcuda.so
#   nvcc
#
# If something isn&#39;t found, fails straight away.
#
# Locations of these are included in 
#   CUDA_CFLAGS and 
#   CUDA_LDFLAGS.
# Path to nvcc is included as
#   NVCC_PATH
# in config.h
# 
# The author is personally using CUDA such that the .cu code is generated
# at runtime, so don&#39;t expect any automake magic to exist for compile time
# compilation of .cu files.
#
# LICENCE
# Public domain
#
# AUTHOR
# wili
#
##### 

AC_DEFUN([AX_CHECK_CUDA], [

# Provide your CUDA path with this      
AC_ARG_WITH(cuda, [  --with-cuda=PREFIX      Prefix of your CUDA installation], [cuda_prefix=$withval], [cuda_prefix=&quot;/usr/local/cuda&quot;])

# Setting the prefix to the default if only --with-cuda was given
if test &quot;$cuda_prefix&quot; == &quot;yes&quot;; then
    if test &quot;$withval&quot; == &quot;yes&quot;; then
        cuda_prefix=&quot;/usr/local/cuda&quot;
    fi
fi

# Checking for nvcc
AC_MSG_CHECKING([nvcc in $cuda_prefix/bin])
if test -x &quot;$cuda_prefix/bin/nvcc&quot;; then
    AC_MSG_RESULT([found])
    AC_DEFINE_UNQUOTED([NVCC_PATH], [&quot;$cuda_prefix/bin/nvcc&quot;], [Path to nvcc binary])
    # We need to add the CUDA search directories for header and lib searches

    CUDA_CFLAGS=&quot;&quot;

    # Saving the current flags
    ax_save_CFLAGS=&quot;${CFLAGS}&quot;
    ax_save_LDFLAGS=&quot;${LDFLAGS}&quot;

    # Announcing the new variables
    AC_SUBST([CUDA_CFLAGS])
    AC_SUBST([CUDA_LDFLAGS])
    AC_SUBST([NVCC],[$cuda_prefix/bin/nvcc])
    AC_CHECK_FILE([$cuda_prefix/lib64],[lib64_found=yes],[lib64_found=no])
    if test &quot;x$lib64_found&quot; = xno ; then
        AC_CHECK_FILE([$cuda_prefix/lib],[lib32_found=yes],[lib32_found=no])
        if test &quot;x$lib32_found&quot; = xyes ; then
            AC_SUBST([CUDA_LIBDIR],[$cuda_prefix/lib])
        else
            AC_MSG_WARN([Couldn&#39;t find cuda lib directory])
            VALID_CUDA=no
        fi
    else
        AC_CHECK_SIZEOF([long])
        if test &quot;x$ac_cv_sizeof_long&quot; = &quot;x8&quot; ; then
            AC_SUBST([CUDA_LIBDIR],[$cuda_prefix/lib64])
            CUDA_CFLAGS+=&quot; -m64&quot;
        elif test &quot;x$ac_cv_sizeof_long&quot; = &quot;x4&quot; ; then
            AC_CHECK_FILE([$cuda_prefix/lib32],[lib32_found=yes],[lib32_found=no])
            if test &quot;x$lib32_found&quot; = xyes ; then
                AC_SUBST([CUDA_LIBDIR],[$cuda_prefix/lib])
                CUDA_CFLAGS+=&quot; -m32&quot;
            else
                AC_MSG_WARN([Couldn&#39;t find cuda lib directory])
                VALID_CUDA=no
            fi
        else
            AC_MSG_ERROR([Could not determine size of long variable type])
        fi
    fi

    if test &quot;x$VALID_CUDA&quot; != xno ; then
        CUDA_CFLAGS+=&quot; -I$cuda_prefix/include&quot;
        CFLAGS=&quot;$CUDA_CFLAGS $CFLAGS&quot;
        CUDA_LDFLAGS=&quot;-L$CUDA_LIBDIR&quot;
        LDFLAGS=&quot;$CUDA_LDFLAGS $LDFLAGS&quot;

        # And the header and the lib
        AC_CHECK_HEADER([cuda.h], [],
            AC_MSG_WARN([Couldn&#39;t find cuda.h])
            VALID_CUDA=no
            ,[#include &lt;cuda.h&gt;])
        if test &quot;x$VALID_CUDA&quot; != &quot;xno&quot; ; then
            AC_CHECK_LIB([cuda], [cuInit], [VALID_CUDA=yes], AC_MSG_WARN([Couldn&#39;t find libcuda]
            VALID_CUDA=no))
        fi
    fi
    # Returning to the original flags
    CFLAGS=${ax_save_CFLAGS}
    LDFLAGS=${ax_save_LDFLAGS}
else
    AC_MSG_RESULT([not found!])
    AC_MSG_WARN([nvcc was not found in $cuda_prefix/bin])
    VALID_CUDA=no
fi

if test &quot;x$enable_cuda&quot; = xyes &amp;&amp; test x$VALID_CUDA = xyes ; then 
    AC_MSG_NOTICE([Building with CUDA bindings])
elif test &quot;x$enable_cuda&quot; = xyes &amp;&amp; test x$VALID_CUDA = xno ; then 
    AC_MSG_ERROR([Cannot build CUDA bindings. Check errors])
fi


])</code></pre></noscript></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gtk2 64-bit Windows Runtime Environment Installer]]></title>
    <link href="http://tschoonj.github.io/blog/2014/02/08/gtk2-64-bit-windows-runtime-environment-installer/"/>
    <updated>2014-02-08T12:47:00+00:00</updated>
    <id>http://tschoonj.github.io/blog/2014/02/08/gtk2-64-bit-windows-runtime-environment-installer</id>
    <content type="html"><![CDATA[<p><strong>Update: this post has been largely superseded by <a href="http://tschoonj.github.io/blog/2014/09/29/gtk2-64-bit-windows-runtime-environment-installer-now-on-github">http://tschoonj.github.io/blog/2014/09/29/gtk2-64-bit-windows-runtime-environment-installer-now-on-github</a> </strong></p>

<p>As I already mentioned in my <a href="http://tschoonj.github.io/blog/2014/01/29/building-a-64-bit-version-of-hdf5-with-mingw-w64/">last post</a>, I have been busy compiling software with MinGW-w64 for the Windows 64-bit platform.f. One of the packages I rely on is <a href="http://www.gtk.org">Gtk+</a> (version 2 for now), and its many dependencies. Fortunately however, the <a href="http://www.gtk.org/download/win64.php">Gtk+ website</a> offers binaries for this architecture, so I didn&rsquo;t have to bother compiling them myself.</p>

<p>In the end I also managed to build all the other dependencies I needed for <a href="http://github.com/tschoonj/xmimsim">XMI-MSIM</a>, so the last step for me was to update my <a href="http://nsis.sourceforge.net/Main_Page">NSIS</a> installer for Windows 64-bit machines. It didn&rsquo;t take long for me to realize that one of the crucial components I install is the <a href="http://gtk-win.sourceforge.net/home/">Gtk Windows Runtime Environment Installer</a>, which really facilitates installing Gtk+ based applications. Unfortunately, Alexander Shaduri, the developer only distributes a 32-bit version of this package, and he has assured me through some emailing that he had no plans to write a 64-bit version due to <a href="http://www.gtk.org/download/win64.php">the experimental nature</a> of the packages that are produced by the Gtk+ people.</p>

<p>This being said, I still needed such an installer so I wrote one based on his NSIS script, using the official 64-bit Gtk+ packages for Windows 64-bit. The only major change I introduced was dropping support for the compatibility DLLs, which were redundant anyway. I am sharing the modified NSIS script as Github Gist so start hacking away at it. This script has some dependencies, apart from the DLLs, which are necessary to build the installer. Since I didn&rsquo;t change them at all, use the files that the original developer is sharing on <a href="http://sourceforge.net/p/gtk-win/code/HEAD/tree/">sourceforge</a>.</p>

<p>The installer itself can be obtained <a href="http://lvserver.ugent.be/gtk-win64/gtk2-runtime-2.22.1-2014-02-01-ts-win64.exe">here</a>. If you would like to see an example on how to use this installer from within your own NSIS script, have a look at e.g. <a href="https://github.com/tschoonj/xmimsim/blob/master/nsis/xmimsim-win64.nsi.in">my XMI-MSIM Windows 64-bit installer</a>.</p>

<!-- more -->


<p>The observant reader may have noticed that the version of Gtk+ that is included is 2.22.1, which is relatively old. In the future I may become sufficiently bold and adventurous, and end up compiling the latest Gtk+ 2.24.x version myself and releasing an updated installer. If this happens, I will update this blogpost&hellip;</p>

<div><script src='https://gist.github.com/8882727.js'></script>
<noscript><pre><code>
; NSIS2 Script for GTK2-Runtime
; by Alexander Shaduri &lt;ashaduri &#39;at&#39; gmail.com&gt;.
; Compatible with NSIS Unicode 2.45.
; Public Domain

; The naming convention is:
; Product: GTK2-Runtime;
; Directory and package names: gtk2-runtime.
; The reason for this is that when gtk3 comes out, it
; should be installable side by side with this package.


!define GTK_VERSION &quot;2.22.1&quot;
!define GTK_BIN_VERSION &quot;2.10.0&quot;
!define PRODUCT_VERSION &quot;${GTK_VERSION}-2014-02-01-ts-win64&quot;
!define PRODUCT_NAME &quot;GTK2-Runtime Win64&quot;
!define PRODUCT_PUBLISHER &quot;Tom Schoonjans&quot;
!define PRODUCT_WEB_SITE &quot;http://gtk-win.sourceforge.net&quot;
!define INSTALLER_OUTPUT_FILE &quot;gtk2-runtime-${PRODUCT_VERSION}.exe&quot;

;!define PRODUCT_DIR_REGKEY &quot;Software\Microsoft\Windows\CurrentVersion\App Paths\AppMainExe.exe&quot;
!define PRODUCT_UNINST_ROOT_KEY &quot;HKLM&quot;
!define PRODUCT_UNINST_KEY &quot;Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}&quot;

!define REGISTRY_APP_PATHS &quot;Software\Microsoft\Windows\CurrentVersion\App Paths&quot;


; AddToPath and friends should work with all users
!define ALL_USERS

!include nsi_env_var_update.nsh  ; EnvVar* functions
!include &quot;FileFunc.nsh&quot;  ; GetOptions
!include &quot;x64.nsh&quot;
!include &quot;LogicLib.nsh&quot;


; --------------- General Settings


; this is needed for proper start menu item manipulation (for all users) in vista
RequestExecutionLevel admin

; This compressor gives us the best results
SetCompressor /SOLID lzma

; Do a CRC check before installing
CRCCheck On

; This is used in titles
Name &quot;${PRODUCT_NAME}&quot;  ;  ${PRODUCT_VERSION}

; Output File Name
OutFile &quot;${INSTALLER_OUTPUT_FILE}&quot;


; The Default Installation Directory
InstallDir &quot;$PROGRAMFILES64\${PRODUCT_NAME}&quot;
;InstallDir &quot;$WINDIR&quot;
; Detect the old installation
InstallDirRegKey HKLM &quot;SOFTWARE\${PRODUCT_NAME}&quot; &quot;&quot;
;InstallDirRegKey HKLM &quot;${PRODUCT_DIR_REGKEY}&quot; &quot;&quot;

ShowInstDetails show
ShowUnInstDetails show





; --------------------- MUI INTERFACE

; MUI 2.0 compatible install
!include &quot;MUI2.nsh&quot;
!include &quot;InstallOptions.nsh&quot;

; Icon &quot;gtk.ico&quot;
; UninstallIcon &quot;gtk.ico&quot;

; MUI Settings
!define MUI_ABORTWARNING
;!define MUI_ICON &quot;nsi_install.ico&quot;
!define MUI_ICON &quot;gtk.ico&quot;
;!define MUI_UNICON &quot;nsi_uninstall.ico&quot;
!define MUI_UNICON &quot;gtk.ico&quot;


; Things that need to be extracted on first (keep these lines before any File command!)
; Only useful for BZIP2 compression
ReserveFile &quot;nsi_pathpage.ini&quot;
ReserveFile &quot;nsi_configpage.ini&quot;
ReserveFile &quot;${NSISDIR}\Plugins\InstallOptions.dll&quot;


; Pages to show during installation
!insertmacro MUI_PAGE_WELCOME
!insertmacro MUI_PAGE_LICENSE &quot;license.txt&quot;
!insertmacro MUI_PAGE_COMPONENTS
Page custom PathPage PathPageExit ; Custom page
!define MUI_PAGE_CUSTOMFUNCTION_LEAVE DirectoryPageExit
!insertmacro MUI_PAGE_DIRECTORY
!insertmacro MUI_PAGE_INSTFILES

;!define MUI_FINISHPAGE_RUN &quot;$INSTDIR\gtk2-runtime\gtk2_prefs.exe&quot;
;!define MUI_FINISHPAGE_SHOWREADME &quot;$INSTDIR\Example.file&quot;
;!define MUI_FINISHPAGE_RUN_NOTCHECKED
!define MUI_FINISHPAGE_NOAUTOCLOSE
;!define MUI_FINISHPAGE_NOREBOOTSUPPORT
!insertmacro MUI_PAGE_FINISH



; Uninstaller page
!insertmacro MUI_UNPAGE_CONFIRM
UninstPage custom un.DeleteConfig  ;Custom page
!insertmacro MUI_UNPAGE_INSTFILES




Function PathPage
    !insertmacro MUI_HEADER_TEXT &quot;$(TEXT_IO_TITLE)&quot; &quot;$(TEXT_IO_SUBTITLE)&quot;
    !insertmacro INSTALLOPTIONS_DISPLAY &quot;nsi_pathpage.ini&quot;
FunctionEnd


; Note: These options are unsupported unless the installer is launched in silent mode (/S).
; e.g. /setpath=no /dllpath=root /sideeffects=no
var install_option_setpath  ; set PATH: yes (default), no
var install_option_dllpath  ; bin (default), lib, root
var install_option_sideeffects  ; yes (default), no. no = don&#39;t write to registry, PATH or start menu.
var install_option_translations  ; install translations: yes, no (default)
var install_option_removeold  ; uninstall the old version first (if present): yes (default), no.

var LIB_INSTDIR
var DLL_DIR_NAME
var DLL_TMP


; Executed when leaving PathPage page.
; Sets DLL_DIR_NAME to dll directory name.
Function PathPageExit
    
    IfSilent dllpath_silent
        ; if not silent, show a page with radiobuttons
        !insertmacro INSTALLOPTIONS_READ $DLL_TMP &quot;nsi_pathpage.ini&quot; &quot;Field 3&quot; &quot;State&quot;
        StrCmp $DLL_TMP &quot;1&quot; goto_dll_bin
        !insertmacro INSTALLOPTIONS_READ $DLL_TMP &quot;nsi_pathpage.ini&quot; &quot;Field 4&quot; &quot;State&quot;
        StrCmp $DLL_TMP &quot;1&quot; goto_dll_lib
        !insertmacro INSTALLOPTIONS_READ $DLL_TMP &quot;nsi_pathpage.ini&quot; &quot;Field 5&quot; &quot;State&quot;
        StrCmp $DLL_TMP &quot;1&quot; goto_dll_none
        goto dllpath_exit
    dllpath_silent:
        ; if silent, use the /dllpath= option
        StrCmp $install_option_dllpath &quot;bin&quot; goto_dll_bin
        StrCmp $install_option_dllpath &quot;lib&quot; goto_dll_lib
        StrCmp $install_option_dllpath &quot;root&quot; goto_dll_none goto_dll_bin  ; default to bin if not matched
    dllpath_exit:

    goto_dll_none:
        StrCpy $DLL_DIR_NAME &quot;&quot;
        goto goto_dll_exit
    goto_dll_lib:
        StrCpy $DLL_DIR_NAME &quot;lib&quot;
        goto goto_dll_exit
    goto_dll_bin:
        StrCpy $DLL_DIR_NAME &quot;bin&quot;
        goto goto_dll_exit
    goto_dll_exit:

FunctionEnd


; Set $LIB_INSTDIR to &lt;instpath&gt;\bin, &lt;instpath&gt;\lib or &lt;instpath&gt;\ .
; Must be after the directory selection page.
Function DirectoryPageExit
    StrCpy $LIB_INSTDIR &quot;$INSTDIR&quot;
    StrCmp $DLL_DIR_NAME &quot;&quot; no_dll_append
        StrCpy $LIB_INSTDIR &quot;$INSTDIR\$DLL_DIR_NAME&quot;
    no_dll_append:
FunctionEnd



Function un.DeleteConfig
    ; !insertmacro MUI_HEADER_TEXT &quot;$(TEXT_IO_TITLE)&quot; &quot;$(TEXT_IO_SUBTITLE)&quot;
    !insertmacro INSTALLOPTIONS_DISPLAY &quot;nsi_configpage.ini&quot;
FunctionEnd



; Language files
!insertmacro MUI_LANGUAGE &quot;English&quot;


; --------------- END MUI



;Description
LangString DESC_SecCopyUI ${LANG_ENGLISH} &quot;GTK2 Runtime&quot;
LangString TEXT_IO_TITLE ${LANG_ENGLISH} &quot;GTK2 Runtime&quot;
LangString TEXT_IO_SUBTITLE ${LANG_ENGLISH} &quot;Additional options&quot;


;License page Introduction
;LicenseText &quot;You must agree to this license before installing.&quot;
;License text
;LicenseData /LANG=${LANG_ENGLISH} &quot;license.txt&quot;





; ----------------- INSTALLATION TYPES

InstType &quot;Recommended&quot;  ; 1
InstType &quot;Full&quot;  ; 2


var SEC_TRANSLATIONS_INSTALLED


Section &quot;GTK+ libraries (required)&quot; SecGTK
SectionIn 1 2 RO
    SetShellVarContext all  ; use all user variables as opposed to current user
    SetOverwrite On

    SetOutPath &quot;$LIB_INSTDIR&quot;

    ; NOTE: If you add or remove any of these,
    ; be sure to do the same in the uninstall section.

    File libfreetype-6.dll  ; freetype is needed for ft2 pango backend
    File libintl-8.dll  ; gettext, needed by all i18n libs
    File libatk-1.0-0.dll  ; atk
    File libcairo-2.dll  ; cairo, needed by gtk
    File libcairo-gobject-2.dll  ; cairo. Doesn&#39;t seem to be required, but since we&#39;re distributing cairo...
    File libcairo-script-interpreter-2.dll  ; cairo. Doesn&#39;t seem to be required, but since we&#39;re distributing cairo...
    File libexpat-1.dll  ; fontconfig needs this
    File libfontconfig-1.dll  ; fontconfig is needed for ft2 pango backend
    File libgailutil-18.dll  ; from gtk
    File libgdk_pixbuf-2.0-0.dll  ; from gtk
    File libgdk-win32-2.0-0.dll  ; from gtk
    File libgio-2.0-0.dll  ; from glib
    File libglib-2.0-0.dll  ; glib
    File libgmodule-2.0-0.dll  ; from glib
    File libgobject-2.0-0.dll  ; from glib
    File libgthread-2.0-0.dll  ; from glib
    File libgtk-win32-2.0-0.dll  ; gtk
    File libpango-1.0-0.dll  ; pango, needed by gtk
    File libpangocairo-1.0-0.dll  ; pango, needed by gtk
    File libpangoft2-1.0-0.dll  ; pango, needed by gtk
    File libpangowin32-1.0-0.dll  ; pango, needed by gtk
    File libpng14-14.dll  ; for gdk_pixbuf loader.
    File zlib1.dll  ; png and many others need this


    ; We install this into the same place as the DLLs to avoid any PATH manipulation.
    SetOutPath &quot;$LIB_INSTDIR&quot;
    File bin\fc-cache.exe
    File bin\fc-list.exe
    File bin\gdk-pixbuf-query-loaders.exe  ; from gdk_pixbuf
    File bin\gspawn-win64-helper.exe
    File bin\gspawn-win64-helper-console.exe
    File bin\gtk-query-immodules-2.0.exe
    File bin\gtk-update-icon-cache.exe
    File bin\gtk-update-icon-cache.exe.manifest
    File bin\pango-querymodules.exe
    
    
    SetOutPath &quot;$INSTDIR&quot;
    SetOverwrite off
    File /r etc  ; don&#39;t overwrite config files
    SetOverwrite On


    SetOutPath &quot;$INSTDIR\lib\gdk-pixbuf-2.0\${GTK_BIN_VERSION}&quot;
    File lib\gdk-pixbuf-2.0\${GTK_BIN_VERSION}\loaders.cache

    ; SetOutPath &quot;$INSTDIR\lib\gdk-pixbuf-2.0\${GTK_BIN_VERSION}\loaders&quot;
    ; File /r lib\gdk-pixbuf-2.0\${GTK_BIN_VERSION}\loaders

    SetOutPath &quot;$INSTDIR\lib\gtk-2.0\modules&quot;
    File /r lib\gtk-2.0\modules

    SetOutPath &quot;$INSTDIR\lib\gtk-2.0\${GTK_BIN_VERSION}&quot;
    ; no longer in gtk as of 2.14.5.
    ; File /r lib\gtk-2.0\${GTK_BIN_VERSION}\immodules
    ; gone as of gtk 2.16.6-2.
    ; File /r lib\gtk-2.0\${GTK_BIN_VERSION}\loaders

    ; wimp
    SetOutPath &quot;$INSTDIR\lib\gtk-2.0\${GTK_BIN_VERSION}\engines&quot;
    File lib\gtk-2.0\${GTK_BIN_VERSION}\engines\libwimp*.dll
    ; We install this, but other installers may not have it.
    File lib\gtk-2.0\${GTK_BIN_VERSION}\engines\libpixmap*.dll

    SetOutPath &quot;$INSTDIR\share\locale&quot;
    File share\locale\locale.alias  ; from gettext

    ; Default theme
    SetOutPath &quot;$INSTDIR\share\themes&quot;
    ; Why have two dirs with the same content? disable &quot;Default&quot;.
    ; File /r share\themes\Default
    File /r share\themes\Emacs
    File /r share\themes\MS-Windows
    File /r share\themes\Raleigh


    SetOutPath &quot;$INSTDIR\gtk2-runtime&quot;
    ; File gtk-postinstall.bat ; this file is generated now
    File license.txt
    File license_gpl.txt
    File license_lgpl.txt
    File license_jpeg.txt
    File license_png.txt
    File license_zlib.txt
    File gtk.ico  ; needed for &quot;add/remove programs&quot;


    ; this script updates some config files, but it&#39;s unsafe
    ; (gtk or pango may not work afterwards), so don&#39;t call it.
    Push $INSTDIR\gtk2-runtime\gtk-postinstall.bat
    Call WritePostInstall
    ; update pango.modules, not working for now
    ; Exec &#39;$INSTDIR\gtk2-runtime\gtk-postinstall.bat&#39;

SectionEnd ; end of gtk section





Section &quot;Translations&quot; SecTranslations
SectionIn 2
    SetShellVarContext all  ; use all user variables as opposed to current user
    StrCpy $SEC_TRANSLATIONS_INSTALLED &quot;1&quot;
    SetOutPath &quot;$INSTDIR&quot;
    SetOverwrite On

    ; SetOutPath &quot;$INSTDIR\lib&quot;
    ; File /r lib\locale

    ; gtk (beginning with 2.12.3) uses share\locale
    SetOutPath &quot;$INSTDIR\share&quot;
    File /r share\locale

SectionEnd



; Section descriptions
!insertmacro MUI_FUNCTION_DESCRIPTION_BEGIN
    !insertmacro MUI_DESCRIPTION_TEXT ${SecGTK} &quot;GTK+ 64-bit Runtime Libraries&quot;
    !insertmacro MUI_DESCRIPTION_TEXT ${SecTranslations} &quot;Additional translations (some are incomplete)&quot;
!insertmacro MUI_FUNCTION_DESCRIPTION_END




; Executed on installer run
Function .onInit
    SetShellVarContext all  ; use all user variables as opposed to current user
    ${IfNot} ${RunningX64} 
        MessageBox MB_OK|MB_ICONEXCLAMATION &quot;This installation requires a 64-bit Windows system&quot; /SD IDOK
        Abort
    ${EndIf}

    SetRegView 64
        
    

    !insertmacro INSTALLOPTIONS_EXTRACT &quot;nsi_pathpage.ini&quot;

    StrCpy $SEC_TRANSLATIONS_INSTALLED &quot;0&quot;  ; set to 1 in appropriate section

    ${GetOptions} &quot;$CMDLINE&quot; &quot;/setpath=&quot; $install_option_setpath
    ${GetOptions} &quot;$CMDLINE&quot; &quot;/dllpath=&quot; $install_option_dllpath
    ${GetOptions} &quot;$CMDLINE&quot; &quot;/sideeffects=&quot; $install_option_sideeffects
    ${GetOptions} &quot;$CMDLINE&quot; &quot;/translations=&quot; $install_option_translations
    ${GetOptions} &quot;$CMDLINE&quot; &quot;/removeold=&quot; $install_option_removeold

    ; Debug stuff
    ; MessageBox MB_ICONINFORMATION|MB_OK &quot;/setpath=$install_option_setpath \
    ;   /dllpath=$install_option_dllpath /sideeffects=$install_option_sideeffects \
    ;   INSTDIR: $INSTDIR&quot; /SD IDOK

    ; if we&#39;re using /sideeffects=no, set /setpath=no, because we can&#39;t
    ; revert it during uninstall (there&#39;s no dllpath in registry).
    StrCmp $install_option_sideeffects &quot;no&quot; &quot;&quot; init_sideeffects
        StrCpy $install_option_setpath &quot;no&quot;  ; set /setpath=no
        goto init_sideeffects_exit
    init_sideeffects:
        Call PreventMultipleInstances  ; in no-sideeffects mode this has no purpose
        Call DetectPrevInstallation  ; we don&#39;t want local installations to interfere with global ones.
    init_sideeffects_exit:


    ; enable translations if requested through command line
    StrCmp $install_option_translations &quot;yes&quot; &quot;&quot; no_translations
        push $R0
        SectionGetFlags ${SecTranslations} $R0
        IntOp $R0 $R0 | ${SF_SELECTED}
        SectionSetFlags ${SecTranslations} $R0
        pop $R0
    no_translations:

    ; Page callbacks are not called if in silent mode, so call these manually
    IfSilent &quot;&quot; +3
        Call PathPageExit
        Call DirectoryPageExit

FunctionEnd



; ------------------ POST INSTALL


var ADD_TO_PATH


Section -post
    SetShellVarContext all  ; use all user variables as opposed to current user

    IfSilent PATH_silent
        ; Read a value from an InstallOptions INI File
        !insertmacro INSTALLOPTIONS_READ $ADD_TO_PATH &quot;nsi_pathpage.ini&quot; &quot;Field 1&quot; &quot;State&quot;
        StrCmp $ADD_TO_PATH &quot;1&quot; goto_set_path_yes goto_set_path_no
        goto PATH_exit
    PATH_silent:
        ; if silent, use the /setpath= option
        StrCmp $install_option_setpath &quot;no&quot; goto_set_path_no goto_set_path_yes
    PATH_exit:


    goto_set_path_yes:
        ; The user requested to add the libdir to $PATH.
        StrCpy $ADD_TO_PATH &quot;1&quot;
        ; Push $LIB_INSTDIR
        ; Call AddToPath  ; add $LIB_INSTDIR to system $PATH
        Push $0  ; result PATH
        ${EnvVarUpdate} $0 &quot;PATH&quot; &quot;A&quot; &quot;HKLM&quot; &quot;$LIB_INSTDIR&quot; ; Append
        Pop $0
        ; MessageBox MB_ICONINFORMATION|MB_OK &quot;$LIB_INSTDIR added to path&quot;
        goto goto_set_path_exit
    goto_set_path_no:
        StrCpy $ADD_TO_PATH &quot;0&quot;
        goto goto_set_path_exit
    goto_set_path_exit:


    ; write out uninstaller
    WriteUninstaller &quot;$INSTDIR\gtk2_runtime_uninst.exe&quot;

    StrCmp $install_option_sideeffects &quot;no&quot; no_sideeffects
        WriteRegStr HKLM &quot;SOFTWARE\${PRODUCT_NAME}&quot; &quot;InstallationDirectory&quot; &quot;$INSTDIR&quot;
        WriteRegStr HKLM &quot;SOFTWARE\${PRODUCT_NAME}&quot; &quot;DllPath&quot; &quot;$LIB_INSTDIR&quot;
        WriteRegStr HKLM &quot;SOFTWARE\${PRODUCT_NAME}&quot; &quot;Vendor&quot; &quot;${PRODUCT_PUBLISHER}&quot;
        WriteRegStr HKLM &quot;SOFTWARE\${PRODUCT_NAME}&quot; &quot;PackageVersion&quot; &quot;${PRODUCT_VERSION}&quot;
        WriteRegStr HKLM &quot;SOFTWARE\${PRODUCT_NAME}&quot; &quot;Version&quot; &quot;${GTK_VERSION}&quot;
        WriteRegStr HKLM &quot;SOFTWARE\${PRODUCT_NAME}&quot; &quot;BinVersion&quot; &quot;${GTK_BIN_VERSION}&quot;

        WriteRegStr HKLM &quot;SOFTWARE\${PRODUCT_NAME}&quot; &quot;DllDirName&quot; &quot;$DLL_DIR_NAME&quot;  ; lib, bin, or &quot;&quot;
        WriteRegStr HKLM &quot;SOFTWARE\${PRODUCT_NAME}&quot; &quot;UsingSystemPath&quot; $ADD_TO_PATH
        WriteRegStr HKLM &quot;SOFTWARE\${PRODUCT_NAME}&quot; &quot;TranslationsInstalled&quot; $SEC_TRANSLATIONS_INSTALLED

        ; compat with installer from http://gimp-win.sourceforge.net/
        WriteRegStr HKLM &quot;SOFTWARE\GTK\2.0&quot; &quot;Path&quot; &quot;$INSTDIR&quot;
        WriteRegStr HKLM &quot;SOFTWARE\GTK\2.0&quot; &quot;Version&quot; &quot;${GTK_VERSION}&quot;
        ; compat with Dropline&#39;s GTK
        WriteRegStr HKLM &quot;SOFTWARE\GTK\2.0&quot; &quot;DllPath&quot; &quot;$LIB_INSTDIR&quot;

        ; Information for the uninstall component in &quot;add/remove programs&quot;
        WriteRegStr HKLM &quot;${PRODUCT_UNINST_KEY}&quot; &quot;DisplayName&quot; &quot;${PRODUCT_NAME}&quot;
        WriteRegStr HKLM &quot;${PRODUCT_UNINST_KEY}&quot; &quot;UninstallString&quot; &quot;$INSTDIR\gtk2_runtime_uninst.exe&quot;
        WriteRegStr HKLM &quot;${PRODUCT_UNINST_KEY}&quot; &quot;InstallLocation&quot; &quot;$INSTDIR&quot;
        WriteRegStr HKLM &quot;${PRODUCT_UNINST_KEY}&quot; &quot;Publisher&quot; &quot;${PRODUCT_PUBLISHER}&quot;
        WriteRegStr HKLM &quot;${PRODUCT_UNINST_KEY}&quot; &quot;DisplayIcon&quot; &quot;$INSTDIR\gtk2-runtime\gtk.ico&quot;
        WriteRegStr HKLM &quot;${PRODUCT_UNINST_KEY}&quot; &quot;URLInfoAbout&quot; &quot;${PRODUCT_WEB_SITE}&quot;
        WriteRegStr HKLM &quot;${PRODUCT_UNINST_KEY}&quot; &quot;DisplayVersion&quot; &quot;${PRODUCT_VERSION}&quot;
        WriteRegDWORD HKLM &quot;${PRODUCT_UNINST_KEY}&quot; &quot;NoModify&quot; 1
        WriteRegDWORD HKLM &quot;${PRODUCT_UNINST_KEY}&quot; &quot;NoRepair&quot; 1

        ; uninstall shortcut
        CreateDirectory &quot;$SMPROGRAMS\GTK2 Runtime&quot;
        CreateShortCut &quot;$SMPROGRAMS\GTK2 Runtime\Uninstall GTK2 Runtime.lnk&quot; &quot;$INSTDIR\gtk2_runtime_uninst.exe&quot; &quot;&quot; &quot;&quot;
        WriteIniStr &quot;$SMPROGRAMS\GTK2 Runtime\Go to the website.url&quot; &quot;InternetShortcut&quot; &quot;URL&quot; &quot;${PRODUCT_WEB_SITE}&quot;


        ; Write $INSTDIR\gtk2-runtime\gtk2r-env.bat
        ; This script sets the GTK environment variables
        DetailPrint &quot;Generating $INSTDIR\gtk2-runtime\gtk2r-env.bat&quot;
        Push $INSTDIR\gtk2-runtime\gtk2r-env.bat
        Call WriteEnvBat
        DetailPrint &quot;Done&quot;

    no_sideeffects:

SectionEnd ; post





; ---------------- UNINSTALL


; Note: These options are unsupported unless the uninstaller is launched in silent mode (/S).
var uninstall_option_remove_config  ; yes, no (default).
var uninstall_option_sideeffects  ; yes (default), no. Use if it was installed with this option.
; These are used only if /sideffects=no :
var uninstall_option_dllpath  ; uninstall dlls from: bin (default), lib, root.
var uninstall_option_translations  ; uninstall translations: yes, no (default)


Function un.onInit
    ${GetOptions} &quot;$CMDLINE&quot; &quot;/remove_config=&quot; $uninstall_option_remove_config
    ${GetOptions} &quot;$CMDLINE&quot; &quot;/sideeffects=&quot; $uninstall_option_sideeffects
    ${GetOptions} &quot;$CMDLINE&quot; &quot;/dllpath=&quot; $uninstall_option_dllpath
    ${GetOptions} &quot;$CMDLINE&quot; &quot;/translations=&quot; $uninstall_option_translations
FunctionEnd



Function un.onUninstSuccess
    HideWindow
    MessageBox MB_ICONINFORMATION|MB_OK &quot;$(^Name) was successfully removed from your computer.&quot; /SD IDOK
FunctionEnd




var leave_config  ; don&#39;t remove global gtk config (uninstall page option)
;var INST_DIR_REG  ; installation dir from registry (uninstall stage)


; This is a separate function to allow multiple calls to it
Function un.DeleteDlls
    SetShellVarContext all  ; use all user variables as opposed to current user

    StrCpy $LIB_INSTDIR &quot;$INSTDIR&quot;
    StrCmp $DLL_DIR_NAME &quot;&quot; un_no_dll_append
        StrCpy $LIB_INSTDIR &quot;$INSTDIR\$DLL_DIR_NAME&quot;
    un_no_dll_append:

    ; bin stuff (they are in the same directory)
    Delete $LIB_INSTDIR\fc-cache.exe
    Delete $LIB_INSTDIR\fc-list.exe
    Delete $LIB_INSTDIR\gdk-pixbuf-query-loaders.exe
    Delete $LIB_INSTDIR\gspawn-win64-helper.exe
    Delete $LIB_INSTDIR\gspawn-win64-helper-console.exe
    Delete $LIB_INSTDIR\gtk-query-immodules-2.0.exe
    Delete $LIB_INSTDIR\gtk-update-icon-cache.exe
    Delete $LIB_INSTDIR\gtk-update-icon-cache.exe.manifest
    Delete $LIB_INSTDIR\pango-querymodules.exe

    ; dlls
    Delete $LIB_INSTDIR\libfreetype-6.dll  ; freetype is needed for ft2 pango backend
    Delete $LIB_INSTDIR\libintl-8.dll  ; gettext, needed by all i18n libs
    Delete $LIB_INSTDIR\libatk-1.0-0.dll  ; atk
    Delete $LIB_INSTDIR\libcairo-2.dll  ; cairo, needed by gtk
    Delete $LIB_INSTDIR\libcairo-gobject-2.dll  ; cairo. Doesn&#39;t seem to be required, but since we&#39;re distributing cairo...
    Delete $LIB_INSTDIR\libcairo-script-interpreter-2.dll  ; cairo. Doesn&#39;t seem to be required, but since we&#39;re distributing cairo...
    Delete $LIB_INSTDIR\libexpat-1.dll  ; fontconfig needs this
    Delete $LIB_INSTDIR\libfontconfig-1.dll  ; fontconfig is needed for ft2 pango backend
    Delete $LIB_INSTDIR\libgailutil-18.dll  ; from gtk
    Delete $LIB_INSTDIR\libgdk_pixbuf-2.0-0.dll  ; from gtk
    Delete $LIB_INSTDIR\libgdk-win32-2.0-0.dll  ; from gtk
    Delete $LIB_INSTDIR\libgio-2.0-0.dll  ; from glib
    Delete $LIB_INSTDIR\libglib-2.0-0.dll  ; glib
    Delete $LIB_INSTDIR\libgmodule-2.0-0.dll  ; from glib
    Delete $LIB_INSTDIR\libgobject-2.0-0.dll  ; from glib
    Delete $LIB_INSTDIR\libgthread-2.0-0.dll  ; from glib
    Delete $LIB_INSTDIR\libgtk-win32-2.0-0.dll  ; gtk
    Delete $LIB_INSTDIR\libpango-1.0-0.dll  ; pango, needed by gtk
    Delete $LIB_INSTDIR\libpangocairo-1.0-0.dll  ; pango, needed by gtk
    Delete $LIB_INSTDIR\libpangoft2-1.0-0.dll  ; pango, needed by gtk
    Delete $LIB_INSTDIR\libpangowin32-1.0-0.dll  ; pango, needed by gtk
    Delete $LIB_INSTDIR\libpng14-14.dll  ; for gdk_pixbuf loader.
    Delete $LIB_INSTDIR\zlib1.dll  ; png and many others need this


FunctionEnd



var found_dir
var find_handle_lang_dir


Section Uninstall
    SetShellVarContext all  ; use all user variables as opposed to current user
    SetAutoClose false

    ; Note: Checking if there is a registry key present, and using it to determine
    ; if this is a private installation will not work, as it will break if a parallel
    ; shared installation is present.

    ; ReadRegStr $INST_DIR_REG HKLM &quot;SOFTWARE\${PRODUCT_NAME}&quot; &quot;InstallationDirectory&quot;
    ; StrCmp $INST_DIR_REG &quot;&quot; uninst_no_sideeffects
    StrCmp $uninstall_option_sideeffects &quot;no&quot; uninst_no_sideeffects
        ; For PATH removal
        ReadRegStr $LIB_INSTDIR HKLM &quot;SOFTWARE\${PRODUCT_NAME}&quot; &quot;DllPath&quot;
        ReadRegStr $DLL_DIR_NAME HKLM &quot;SOFTWARE\${PRODUCT_NAME}&quot; &quot;DllDirName&quot;
        ReadRegStr $ADD_TO_PATH HKLM &quot;SOFTWARE\${PRODUCT_NAME}&quot; &quot;UsingSystemPath&quot;
        ReadRegStr $SEC_TRANSLATIONS_INSTALLED HKLM &quot;SOFTWARE\${PRODUCT_NAME}&quot; &quot;TranslationsInstalled&quot;

        DeleteRegKey HKLM &quot;SOFTWARE\GTK\2.0&quot;  ; dropline, etc...
        DeleteRegKey /ifempty HKLM &quot;SOFTWARE\GTK&quot;  ; don&#39;t damage other installations

        DeleteRegKey HKLM &quot;SOFTWARE\${PRODUCT_NAME}&quot;
        DeleteRegKey HKLM &quot;${PRODUCT_UNINST_KEY}&quot;

        ; FIXME: Do we have this registry key?
        ; DeleteRegKey HKCU &quot;Software\${PRODUCT_NAME}&quot;

        Delete &quot;$SMPROGRAMS\GTK2 Runtime\Uninstall GTK2 Runtime.lnk&quot;
        Delete &quot;$SMPROGRAMS\GTK2 Runtime\Go to the website.url&quot;
        RMDir &quot;$SMPROGRAMS\GTK2 Runtime&quot;  ; only if empty, theme selector may still be there

        ; Remove GTK from $PATH
        StrCmp $ADD_TO_PATH &quot;0&quot; un_nopath  ; Setting $PATH was not requested during installation
        ; Push $LIB_INSTDIR
        ; Call un.RemoveFromPath
        Push $0  ; result PATH
        ${un.EnvVarUpdate} $0 &quot;PATH&quot; &quot;R&quot; &quot;HKLM&quot; &quot;$LIB_INSTDIR&quot; ; remove
        Pop $0
        ; MessageBox MB_OK &quot;$LIB_INSTDIR removed from PATH&quot; /SD IDOK
        un_nopath:

        ; $DLL_DIR_NAME is from the registry here
        Call un.DeleteDlls

        goto delete_dlls_exit


    uninst_no_sideeffects:


        Strcpy $SEC_TRANSLATIONS_INSTALLED &quot;0&quot;
        StrCmp $uninstall_option_translations &quot;yes&quot; &quot;&quot; nodelete_translations
            Strcpy $SEC_TRANSLATIONS_INSTALLED &quot;1&quot;
        nodelete_translations:


        ; All dll files. We delete them before /bin and /lib, so that
        ; the directories are empty afterwards.

        ; Since we have no registry, we have to remove dlls from all possible locations
        ; StrCpy $DLL_DIR_NAME &quot;&quot;
        ; Call un.DeleteDlls
        ; StrCpy $DLL_DIR_NAME &quot;bin&quot;
        ; Call un.DeleteDlls
        ; StrCpy $DLL_DIR_NAME &quot;lib&quot;
        ; Call un.DeleteDlls
        
        ; Force users to use the command-line argument instead:
        ; if silent, use the /dllpath= option
        StrCmp $uninstall_option_dllpath &quot;bin&quot; goto_undll_bin
        StrCmp $uninstall_option_dllpath &quot;lib&quot; goto_undll_lib
        StrCmp $uninstall_option_dllpath &quot;root&quot; goto_undll_none goto_undll_bin  ; default to bin if not matched

        goto_undll_none:
            StrCpy $DLL_DIR_NAME &quot;&quot;
            goto goto_undll_exit
        goto_undll_lib:
            StrCpy $DLL_DIR_NAME &quot;lib&quot;
            goto goto_undll_exit
        goto_undll_bin:
            StrCpy $DLL_DIR_NAME &quot;bin&quot;
            goto goto_undll_exit

        goto_undll_exit:
            Call un.DeleteDlls

    delete_dlls_exit:


    ; Delete config file?
    IfSilent &quot;&quot; read_config_page
        StrCmp $uninstall_option_remove_config &quot;yes&quot; delete_config skip_config

    read_config_page:
        !insertmacro INSTALLOPTIONS_READ $leave_config &quot;nsi_configpage.ini&quot; &quot;Field 1&quot; &quot;State&quot;
        StrCmp $leave_config &quot;1&quot; skip_config

    delete_config:
        Delete &quot;$INSTDIR\etc\gtk-2.0\gtkrc&quot;
    skip_config:


    Delete &quot;$INSTDIR\etc\fonts\fonts.conf&quot;
    RMDir &quot;$INSTDIR\etc\fonts&quot;  ; only if empty
    Delete &quot;$INSTDIR\etc\pango\pango.modules&quot;
    RMDir &quot;$INSTDIR\etc\pango&quot;  ; only if empty
    ; Delete &quot;$INSTDIR\etc\gtk-2.0\gdk-pixbuf.loaders&quot;
    Delete &quot;$INSTDIR\etc\gtk-2.0\gtk.immodules&quot;
    Delete &quot;$INSTDIR\etc\gtk-2.0\gtkrc.default&quot;
    Delete &quot;$INSTDIR\etc\gtk-2.0\im-multipress.conf&quot;
    RMDir &quot;$INSTDIR\etc\gtk-2.0&quot; ; only if empty
    RMDir &quot;$INSTDIR\etc&quot; ; only if empty

    ; some helper files here
    RMDir /r &quot;$INSTDIR\gtk2-runtime&quot;

    RMDir &quot;$INSTDIR\bin&quot;  ; only if empty

    ; RMDir /r &quot;$INSTDIR\lib&quot;
    ; pango modules are gone as of gtk 2.10
    ;  RMDir /r &quot;$INSTDIR\lib\pango&quot;
    
    Delete &quot;$INSTDIR\lib\gdk-pixbuf-2.0\${GTK_BIN_VERSION}\loaders.cache&quot;
    ; RMDir &quot;$INSTDIR\lib\gdk-pixbuf-2.0\${GTK_BIN_VERSION}\loaders&quot;  ; not forced
    RMDir &quot;$INSTDIR\lib\gdk-pixbuf-2.0\${GTK_BIN_VERSION}&quot;  ; not forced
    RMDir &quot;$INSTDIR\lib\gdk-pixbuf-2.0&quot;  ; not forced


    RMDir /r &quot;$INSTDIR\lib\gtk-2.0\modules&quot;

    ; no longer in gtk as of 2.14.5
    ; RMDir /r &quot;$INSTDIR\lib\gtk-2.0\${GTK_BIN_VERSION}\immodules&quot;
    ; gone as of gtk 2.16.6-2
    ;RMDir /r &quot;$INSTDIR\lib\gtk-2.0\${GTK_BIN_VERSION}\loaders&quot;

    Delete &quot;$INSTDIR\lib\gtk-2.0\${GTK_BIN_VERSION}\engines\libwimp*.dll&quot;
    ; there should be no problem deleting this
    Delete &quot;$INSTDIR\lib\gtk-2.0\${GTK_BIN_VERSION}\engines\libpixmap*.dll&quot;

    RMDir &quot;$INSTDIR\lib\gtk-2.0\${GTK_BIN_VERSION}\engines&quot;  ; not forced
    RMDir &quot;$INSTDIR\lib\gtk-2.0\${GTK_BIN_VERSION}&quot;  ; not forced
    RMDir &quot;$INSTDIR\lib\gtk-2.0&quot;  ; not forced

    RMDir &quot;$INSTDIR\lib&quot;  ; not forced

    Delete &quot;$INSTDIR\share\locale\locale.alias&quot;  ; gettext

    ; Remove our translations only
    StrCmp $SEC_TRANSLATIONS_INSTALLED &quot;1&quot; &quot;&quot; un_notranslations
        FindFirst $find_handle_lang_dir $found_dir &quot;$INSTDIR\share\locale\*&quot;
        find_lang_dir_next:
        ; DetailPrint &quot;LOC: $found_dir&quot;
        StrCmp $found_dir &quot;&quot; find_lang_dir_done
        ; check if it&#39;s a directory
        IfFileExists &quot;$INSTDIR\share\locale\$found_dir\*.*&quot; &quot;&quot; find_lang_dir_continue
        IfFileExists &quot;$INSTDIR\share\locale\$found_dir\LC_MESSAGES\*.*&quot; &quot;&quot; find_lang_dir_continue

        Delete &quot;$INSTDIR\share\locale\$found_dir\LC_MESSAGES\atk10.mo&quot;
        Delete &quot;$INSTDIR\share\locale\$found_dir\LC_MESSAGES\gdk-pixbuf.mo&quot;
        Delete &quot;$INSTDIR\share\locale\$found_dir\LC_MESSAGES\glib20.mo&quot;
        Delete &quot;$INSTDIR\share\locale\$found_dir\LC_MESSAGES\gtk20.mo&quot;
        Delete &quot;$INSTDIR\share\locale\$found_dir\LC_MESSAGES\gtk20-properties.mo&quot;

        RmDir &quot;$INSTDIR\share\locale\$found_dir\LC_MESSAGES&quot;  ; only if empty
        RmDir &quot;$INSTDIR\share\locale\$found_dir&quot;

        find_lang_dir_continue:
        FindNext $find_handle_lang_dir $found_dir
        goto find_lang_dir_next
        find_lang_dir_done:
        FindClose $find_handle_lang_dir

        RMDir &quot;$INSTDIR\share\locale&quot;  ; only if empty, not to remove the other programs&#39; translations
    un_notranslations:


    RMDir /r &quot;$INSTDIR\share\themes\Raleigh&quot;
    RMDir /r &quot;$INSTDIR\share\themes\MS-Windows&quot;
    RMDir /r &quot;$INSTDIR\share\themes\Emacs&quot;

    RMDir &quot;$INSTDIR\share\themes&quot;  ; not forced
    RMDir &quot;$INSTDIR\share&quot;  ; not forced

    Delete &quot;$INSTDIR\gtk2_runtime_uninst.exe&quot;

    RMDir &quot;$INSTDIR&quot;  ; delete only if empty

SectionEnd ; end of uninstall section






; --------------- Helpers


; WriteEnvBat
Function WriteEnvBat
    Pop $R0 ; Output file
    Push $R9
        FileOpen $R9 $R0 w
        FileWrite $R9 &quot;@set GTK2R_PREFIX=$LIB_INSTDIR$\r$\n&quot;
        FileWrite $R9 &quot;$\r$\n&quot;
        FileWrite $R9 &quot;@echo Setting environment variables for GTK2-Runtime.$\r$\n&quot;
        FileWrite $R9 &quot;@echo.$\r$\n&quot;
        FileWrite $R9 &quot;$\r$\n&quot;
        FileWrite $R9 &quot;@echo set PATH=%GTK2R_PREFIX%;%%PATH%%$\r$\n&quot;
        FileWrite $R9 &quot;@set PATH=%GTK2R_PREFIX%;%PATH%$\r$\n&quot;
        FileWrite $R9 &quot;$\r$\n&quot;
        FileWrite $R9 &quot;@echo.$\r$\n&quot;
        FileClose $R9
    Pop $R9
FunctionEnd



; WritePostInstall
Function WritePostInstall
    SetShellVarContext all  ; use all user variables as opposed to current user
    Pop $R0 ; Output file
    Push $R9
        FileOpen $R9 $R0 w
        FileWrite $R9 &quot;@echo off$\r$\n&quot;
        FileWrite $R9 &quot;$\&quot;$INSTDIR\bin\pango-querymodules.exe$\&quot; &gt; $\&quot;$INSTDIR\etc\pango\pango.modules$\&quot;$\r$\n&quot;
        FileWrite $R9 &quot;rem $\&quot;$INSTDIR\bin\gdk-pixbuf-query-loaders.exe$\&quot; &gt; $\&quot;$INSTDIR\etc\gtk-2.0\gdk-pixbuf.loaders$\&quot;$\r$\n&quot;
        FileWrite $R9 &quot;$\&quot;$INSTDIR\bin\gtk-query-immodules-2.0.exe$\&quot; &gt; $\&quot;$INSTDIR\etc\gtk-2.0\gtk.immodules$\&quot;$\r$\n&quot;
        FileWrite $R9 &quot;rem $\&quot;$INSTDIR\bin\gtk-update-icon-cache.exe$\&quot;$\r$\n&quot;
        FileClose $R9
    Pop $R9
FunctionEnd




; Detect previous installation
Function DetectPrevInstallation
    ; if /removeold=no option is given, don&#39;t check anything.
    StrCmp $install_option_removeold &quot;no&quot; old_detect_done

    SetShellVarContext all  ; use all user variables as opposed to current user
    push $R0

    ; detect previous installation
    ReadRegStr $R0 HKLM &quot;${PRODUCT_UNINST_KEY}&quot; &quot;UninstallString&quot;
    StrCmp $R0 &quot;&quot; old_detect_done

    MessageBox MB_OKCANCEL|MB_ICONEXCLAMATION \
        &quot;${PRODUCT_NAME} is already installed. $\n$\nClick `OK` to remove the \
        previous version or `Cancel` to continue anyway.&quot; \
        /SD IDOK IDOK old_uninst
        ; Abort
        goto old_detect_done

    ; Run the old uninstaller
    old_uninst:
        ClearErrors
        IfSilent old_silent_uninst old_nosilent_uninst

        old_nosilent_uninst:
            ExecWait &#39;$R0&#39;
            goto old_uninst_continue

        old_silent_uninst:
            ; We assume it&#39;s an NSIS-generated uninstaller.
            ExecWait &#39;$R0 /S _?=$INSTDIR&#39;

        old_uninst_continue:

        IfErrors old_no_remove_uninstaller

        ; You can either use Delete /REBOOTOK in the uninstaller or add some code
        ; here to remove to remove the uninstaller. Use a registry key to check
        ; whether the user has chosen to uninstall. If you are using an uninstaller
        ; components page, make sure all sections are uninstalled.
        old_no_remove_uninstaller:

    old_detect_done: ; old installation not found, all ok

    pop $R0
FunctionEnd



; Prevent running multiple instances of the installer
Function PreventMultipleInstances
    Push $R0
    System::Call &#39;kernel32::CreateMutexA(i 0, i 0, t ${PRODUCT_NAME}) ?e&#39;
    Pop $R0
    StrCmp $R0 0 +3
        MessageBox MB_OK|MB_ICONEXCLAMATION &quot;The installer is already running.&quot; /SD IDOK
        Abort
    Pop $R0
FunctionEnd




; eof
</code></pre></noscript></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Building a 64-bit version of HDF5 with MinGW-w64]]></title>
    <link href="http://tschoonj.github.io/blog/2014/01/29/building-a-64-bit-version-of-hdf5-with-mingw-w64/"/>
    <updated>2014-01-29T16:35:00+00:00</updated>
    <id>http://tschoonj.github.io/blog/2014/01/29/building-a-64-bit-version-of-hdf5-with-mingw-w64</id>
    <content type="html"><![CDATA[<p>I have finally decided to try building a 64-bit version of the Windows package of <a href="http://github.com/tschoonj/xmimsim">XMI-MSIM</a>.
As is the case for my 32-bit builds, I am using the MinGW compiler as provided by <a href="http://tdm-gcc.tdragon.net">TDM-GCC</a>, although obviously this time I opted for the 64-bit variant.
Now XMI-MSIM has a considerable amount of dependencies (GTK+, GSL, HDF5, libxml2, libxslt, curl, json-glib and others), I am again forced to compile these all again from source before I can even think of compiling my actualy software. One exception here is GTK+ and its dependencies since the good people from the GTK project are offering 64-bit builds (compiled with MinGW-w64) on their <a href="http://www.gtk.org/download/win64.php">website</a>.</p>

<p>In the past, the HDF5 build has always cost me most of my time, compared to the other packages, to get it compiled on MSYS, especially the Fortran bindings part. Now since I have dropped the dependency for these Fortran bindings in my latest version, because of my past experiences, I hoped that compiling them with MinGW-w64 might somehow have become easier.</p>

<p>Alas&hellip;</p>

<!--more-->


<p>As it turns out the HDF5 people have decided to drop support for building HDF5 with MinGW with their 1.8.5 release, and are currently only supporting builds on Windows with either cygwin (with the configure script) or Visual Studio (with CMake), none of which was suitable for me.
I downloaded the latest version 1.8.12 from the <a href="http://www.hdfgroup.org/HDF5/release/obtainsrc.html">HDF5 website</a>, unpacked the tarball and ran:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ./configure --host=x86_64-w64-mingw32 --build=x86_64-w64-mingw32 --disable-hl --prefix=$HOME</span></code></pre></td></tr></table></div></figure>


<p>The two first options ensure that the configure script realizes that I am using a 64-bit MinGW compiler, which may be necessary for some tests to pass (at least with other packages I compiled this was necessary).
The third option disable the high-level bindings, while the last option makes sure that they files will be installed in subfolders of my home directory.</p>

<p>Running make resulted in the compilation process starting but it halted after some time with errors that were related to some preprocessor macros that were not defined. A quick google search yielded <a href="http://mail.lists.hdfgroup.org/pipermail/hdf-forum_lists.hdfgroup.org/2012-April/005699.html">this</a>. After implementing this fix I resumed compilation but ran again into trouble. This time google was not helpful but I found the fix myself.</p>

<p>The solution to both problems was to append the following lines to the src/H5pubconf.h within your <em>builddirectory</em>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="c1">//fixes first problem</span>
</span><span class='line'><span class="cp">#ifndef H5_HAVE_WIN32_API</span>
</span><span class='line'><span class="cp">#ifdef WIN32 </span><span class="cm">/* defined for all windows systems */</span><span class="cp"></span>
</span><span class='line'><span class="cp">#define H5_HAVE_WIN32_API 1</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#ifndef H5_HAVE_MINGW</span>
</span><span class='line'><span class="cp">#ifdef __MINGW32__ </span><span class="cm">/*defined for all MinGW compilers */</span><span class="cp"></span>
</span><span class='line'><span class="cp">#define H5_HAVE_MINGW 1</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//fixes second problem</span>
</span><span class='line'><span class="cp">#define H5_BUILT_AS_DYNAMIC_LIB 1</span>
</span></code></pre></td></tr></table></div></figure>


<p>Afterwards everything builds fine, and even make check went pretty well except for one error, which seemed harmless.</p>

<p>There&rsquo;s a good chance that future HDF5 versions will either fix this by including this patch (although I wouldn&rsquo;t count on it) or will break building HDF5 with MinGW-w64 once again in new and fascinating ways (I put my money on this). Since I will be stuck with HDF5 for a while longer, don&rsquo;t be surprised if this post gets updated&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Building libtool modules: Python bindings]]></title>
    <link href="http://tschoonj.github.io/blog/2013/09/04/building-libtool-modules-python-bindings/"/>
    <updated>2013-09-04T10:47:00+01:00</updated>
    <id>http://tschoonj.github.io/blog/2013/09/04/building-libtool-modules-python-bindings</id>
    <content type="html"><![CDATA[<p>One of the software packages (<a href="http://github.com/tschoonj/xraylib">xraylib</a>) I am working on, consists of a C-library with bindings to a number of other languages such as Python, Fortran 2003, IDL, Java, Ruby, Lua and Perl. Apart from IDL and Fortran 2003, the source code for these bindings is generated automatically using <a href="http://www.swig.org">swig</a>, although with considerable language-specific modifications to the swig interface file.</p>

<p>The bindings source code afterwards needs to be compiled into a dynamically loadable library, which will then be loaded at runtime by the program whenever the user needs to use a function or variable from the bindings (actually from the underlying C-library, but exposed through the swig generated bindings).
As a rule, each programming language that supports such dynamically loadable libraries comes with specific instructions on how to generate the libraries from the bindings source code, often using platform independent tools.</p>

<p>However, these tools never seem to integrate well with autoconf and automake and lead to quite complicated Makefile.am files. A considerable more easy approach would consist of relying on libtool&rsquo;s functionality of generating these dynamically loadable libraries (called modules in the libtool documentation).
In this series of posts I will share my experiences on generating bindings to the aforementioned languages using libtool in a relatively clear and easy way. All the code has been tested on Linux and Mac OS X. It may also work on Windows though, provided you install a bash shell with the required tools.</p>

<p>In this first post I will discuss Python extension modules.</p>

<!--more-->


<h2>Checking for python development tools</h2>

<p>If you want to create an autotools based project consisting of a C-library and python bindings, then one of the first things that configure will need to check for is the presence of the python interpreter and the development kit consisting of the python headers and some essential tools.
I accomplished this by adding the following lines into configure.ac</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#configure.ac snippet</span>
</span><span class='line'><span class="c">#copy paste into your own configure.ac file</span>
</span><span class='line'>
</span><span class='line'><span class="c">#check for swig</span>
</span><span class='line'>AC_CHECK_PROGS<span class="o">([</span>SWIG<span class="o">]</span>,<span class="o">[</span>swig<span class="o">]</span>,<span class="o">[</span><span class="s2">&quot;noswig&quot;</span><span class="o">])</span>
</span><span class='line'>
</span><span class='line'><span class="c">#present configure with a command-line option to disable the python bindings</span>
</span><span class='line'>AC_ARG_ENABLE<span class="o">([</span>python<span class="o">]</span>,<span class="o">[</span>AS_HELP_STRING<span class="o">([</span>--disable-python<span class="o">]</span>,<span class="o">[</span>build without the python bindings<span class="o">])]</span>,<span class="o">[</span><span class="nv">enable_python</span><span class="o">=</span><span class="nv">$enableval</span><span class="o">]</span>,<span class="o">[</span><span class="nv">enable_python</span><span class="o">=</span>check<span class="o">])</span>
</span><span class='line'><span class="c">#default behavior is to install the python bindings into subfolders of $prefix</span>
</span><span class='line'><span class="c">#however, this may require the user to set the PYTHONPATH environment variable</span>
</span><span class='line'><span class="c">#in order to avoid this, invoke configure with the --enable-python-integration option</span>
</span><span class='line'>
</span><span class='line'>AC_ARG_ENABLE<span class="o">([</span>python-integration<span class="o">]</span>,<span class="o">[</span>AS_HELP_STRING<span class="o">([</span>--enable-python-integration<span class="o">]</span>,<span class="o">[</span>install the python bindings in the interpreters site-packages folder<span class="o">])]</span>,<span class="o">[</span><span class="nv">enable_python_integration</span><span class="o">=</span><span class="nv">$enableval</span><span class="o">]</span>,<span class="o">[</span><span class="nv">enable_python_integration</span><span class="o">=</span>check<span class="o">])</span>
</span><span class='line'>
</span><span class='line'><span class="nv">VALID_PYTHON</span><span class="o">=</span>
</span><span class='line'>
</span><span class='line'><span class="k">if </span><span class="nb">test</span> <span class="s2">&quot;x$SWIG&quot;</span> <span class="o">=</span> xnoswig <span class="o">&amp;&amp;</span> <span class="nb">test</span> <span class="s2">&quot;x$enable_python&quot;</span> <span class="o">=</span> xyes ; <span class="k">then</span>
</span><span class='line'>        <span class="c">#don&#39;t even bother when swig is not found</span>
</span><span class='line'>        AC_MSG_ERROR<span class="o">([</span>--enable-python was given as an option but swig was not found on the system<span class="o">])</span>
</span><span class='line'><span class="k">elif </span><span class="nb">test</span> <span class="s2">&quot;x$SWIG&quot;</span> <span class="o">=</span> xswig <span class="o">&amp;&amp;</span> <span class="nb">test</span> <span class="s2">&quot;x$enable_python&quot;</span> !<span class="o">=</span> xno ; <span class="k">then</span>
</span><span class='line'>        <span class="c">#verify the python installation</span>
</span><span class='line'>        AM_PATH_PYTHON<span class="o">(</span>,<span class="o">[</span><span class="nv">PYTHON_FOUND</span><span class="o">=</span><span class="nb">true</span><span class="o">]</span>,<span class="o">[</span><span class="nv">PYTHON_FOUND</span><span class="o">=</span><span class="nb">false</span><span class="o">])</span>
</span><span class='line'>        <span class="k">if </span><span class="nb">test</span> <span class="s2">&quot;x$PYTHON_FOUND&quot;</span> <span class="o">=</span> xtrue ; <span class="k">then</span>
</span><span class='line'><span class="k">                </span><span class="nv">PYTHON_CPPFLAGS</span><span class="o">=</span>
</span><span class='line'>                <span class="nv">PYTHON_LDFLAGS</span><span class="o">=</span>
</span><span class='line'>                AX_PYTHON_DEVEL
</span><span class='line'>                <span class="k">if </span><span class="nb">test</span> <span class="s2">&quot;x$PYTHON&quot;</span> <span class="o">=</span> x ; <span class="k">then</span>
</span><span class='line'><span class="k">                        if </span><span class="nb">test</span> <span class="s2">&quot;x$enable_python&quot;</span> <span class="o">=</span> xyes ; <span class="k">then</span>
</span><span class='line'><span class="k">                                </span>AC_MSG_ERROR<span class="o">([</span>Incomplete python development package<span class="o">])</span>
</span><span class='line'>                        <span class="k">else</span>
</span><span class='line'><span class="k">                                </span>AC_MSG_WARN<span class="o">([</span>Incomplete python development package<span class="o">])</span>
</span><span class='line'>                        <span class="k">fi</span>
</span><span class='line'><span class="k">                        </span><span class="nv">VALID_PYTHON</span><span class="o">=</span>no
</span><span class='line'>                <span class="k">else</span>
</span><span class='line'><span class="k">                        </span><span class="nv">VALID_PYTHON</span><span class="o">=</span>yes
</span><span class='line'>                <span class="k">fi</span>
</span><span class='line'>
</span><span class='line'><span class="k">        fi</span>
</span><span class='line'><span class="k">fi</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">if </span><span class="nb">test</span> <span class="s2">&quot;x$VALID_PYTHON&quot;</span> <span class="o">=</span> xyes ; <span class="k">then</span>
</span><span class='line'><span class="k">  </span>AC_MSG_NOTICE<span class="o">([</span>Building with Python bindings<span class="o">])</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="k">if </span><span class="nb">test</span> <span class="s2">&quot;x$enable_python_integration&quot;</span> <span class="o">=</span> xyes ; <span class="k">then</span>
</span><span class='line'><span class="k">          </span><span class="nv">pythondir</span><span class="o">=</span><span class="nv">$PYTHON_SITE_PKG</span>
</span><span class='line'>          <span class="nv">pyexecdir</span><span class="o">=</span><span class="nv">$PYTHON_SITE_PKG_EXEC</span>
</span><span class='line'>  <span class="k">fi</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">  </span>AC_SUBST<span class="o">(</span>PYTHONDIR,<span class="nv">$pythondir</span><span class="o">)</span>
</span><span class='line'>  AC_SUBST<span class="o">(</span>PKGPYTHONDIR,<span class="nv">$pkgpythondir</span><span class="o">)</span>
</span><span class='line'>  AC_SUBST<span class="o">(</span>PYEXECDIR,<span class="nv">$pyexecdir</span><span class="o">)</span>
</span><span class='line'>  AC_SUBST<span class="o">(</span>PKGPYEXECDIR,<span class="nv">$pkgpyexecdir</span><span class="o">)</span>
</span><span class='line'><span class="k">fi</span>
</span><span class='line'>
</span><span class='line'>AM_CONDITIONAL<span class="o">([</span>ENABLE_PYTHON<span class="o">]</span>,<span class="o">[</span><span class="nb">test </span>x<span class="nv">$VALID_PYTHON</span> <span class="o">=</span> xyes<span class="o">])</span>
</span></code></pre></td></tr></table></div></figure>


<p>As can be seen from this snippet, I depend on two m4 macros to obtain the required information: <a href="http://www.gnu.org/software/automake/manual/html_node/Python.html">AM_PATH_PYTHON</a>, which searches for Python interpreter and subsequently sets a number of variables that will be used at installation time, and AX_PYTHON_DEVEL (I am using a heavily modified version of the code found at <a href="http://www.gnu.org/software/autoconf-archive/ax_python_devel.html">autoconf archives</a>), which will check for the required headers and perform a test compilation to make sure everything works.</p>

<h2>Writing the Makefile.am</h2>

<p>The Python way of building and installing extensions relies on the <a href="http://docs.python.org/3.3/distutils/setupscript.html#describing-extension-modules">Distutils package</a>, and is guaranteed to work on all platforms but integrates with difficulty into autotools based installation scripts.
However, recent versions of <a href="http://www.gnu.org/software/automake/manual/html_node/Python.html">automake</a> come with built-in support for installing python source files (and even byte-compile them), and comes with some recommendations on how to build your Python extensions module (possibly linked to a C-library as in our case) using libtool. The following example code is based upon these recommendations but also contains additional Makefile targets that deal with generating the Python extension module source through swig. Let&rsquo;s assume our original C-library is called <code>mytest</code>, and is located in the <code>src</code> subfolder of the source tree. The Python bindings will be built in the <code>python</code> subfolder.</p>

<p>In this example, I followed the Python recommendations with regard to naming the extension module:</p>

<blockquote><p>When an extension module written in C or C++ has an accompanying Python module that provides a higher level (e.g. more object oriented) interface, the C/C++ module has a leading underscore.</p><footer><strong>http://www.python.org/dev/peps/pep-0008/#package-and-module-names PEP 8 &#8211; Style Guide for Python Code</strong></footer></blockquote>


<p>In this case, the accompanying Python module will be automatically generated by swig, and will be called <code>mytest.py</code>, while the extension module will receive the libtool name <code>_mytest.la</code>. The actual library extension will be platform dependent (.so on Linux/Mac OS X, .dll on Windows).</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='makefile'><span class='line'><span class="c">#python bindings will only be built if all buildtools are available, hence the following automake conditional</span>
</span><span class='line'><span class="err">if</span> <span class="err">ENABLE_PYTHON</span>
</span><span class='line'><span class="c">#our python extension module</span>
</span><span class='line'><span class="nv">pyexec_LTLIBRARIES</span> <span class="o">=</span> _mytest.la
</span><span class='line'><span class="nv">_mytest_la_CFLAGS</span> <span class="o">=</span> <span class="k">$(</span>PYTHON_CFLAGS<span class="k">)</span> -I<span class="k">$(</span>top_srcdir<span class="k">)</span>/include <span class="k">$(</span>PYTHON_CPPFLAGS<span class="k">)</span>
</span><span class='line'><span class="c">#link to the C-library</span>
</span><span class='line'><span class="c">#probably on Windows one will need to link against the python dll as well</span>
</span><span class='line'><span class="nv">_mytest_la_LIBADD</span> <span class="o">=</span> ../src/mytest.la
</span><span class='line'><span class="c">#the source code for our extensions module</span>
</span><span class='line'><span class="c">#nodist because this file will be generated by swig</span>
</span><span class='line'><span class="nv">nodist__mytest_la_SOURCES</span> <span class="o">=</span> mytest_wrap.c
</span><span class='line'><span class="c">#-module forces libtool to generate a dynamically loadable module</span>
</span><span class='line'><span class="nv">_mytest_la_LDFLAGS</span> <span class="o">=</span> -avoid-version -module -shared -export-dynamic
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c">#nodist because this file will be generated by swig</span>
</span><span class='line'><span class="nv">nodist_python_PYTHON</span> <span class="o">=</span> mytest.py
</span><span class='line'>
</span><span class='line'><span class="c">#this line assumes that the swig interface file mytest.i is located in the src subdirectory</span>
</span><span class='line'><span class="nf">mytest_wrap.c</span><span class="o">:</span> <span class="m">$(top_srcdir)/src/mytest.i</span>
</span><span class='line'>  <span class="k">$(</span>SWIG<span class="k">)</span> -I<span class="k">${</span><span class="nv">top_srcdir</span><span class="k">}</span>/include -includeall -o mytest_wrap.c -python <span class="k">${</span><span class="nv">top_srcdir</span><span class="k">}</span>/src/mytest.i
</span><span class='line'>
</span><span class='line'><span class="nf">mytest.py</span><span class="o">:</span> <span class="m">mytest_wrap.c</span>
</span><span class='line'>
</span><span class='line'><span class="nf">clean-local</span><span class="o">:</span>
</span><span class='line'>  rm -rf mytest_wrap.c mytest.py mytest.pyc
</span><span class='line'>
</span><span class='line'><span class="cp">endif</span>
</span></code></pre></td></tr></table></div></figure>


<p>When writing an autotools based project using these guidelines, you should have no problem compiling and installing your python bindings and the C-library it depends on, with the familiar commands:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>./configure
</span><span class='line'>make
</span><span class='line'>make install</span></code></pre></td></tr></table></div></figure>


<h2>The code</h2>

<p>The full code follows: as usual it&rsquo;s a github gist so feel free to clone it and hack away at it.</p>

<div><script src='https://gist.github.com/6441999.js'></script>
<noscript><pre><code></code></pre></noscript></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Exporting and printing a GtkExtra plot canvas]]></title>
    <link href="http://tschoonj.github.io/blog/2013/07/22/exporting-and-printing-a-gtkextra-plot-canvas/"/>
    <updated>2013-07-22T10:24:00+01:00</updated>
    <id>http://tschoonj.github.io/blog/2013/07/22/exporting-and-printing-a-gtkextra-plot-canvas</id>
    <content type="html"><![CDATA[<p>My software package <a href="http://github.com/tschoonj/xmimsim">XMI-MSIM</a> relies on <a href="http://gtkextra.sourceforge.net/cms/">GtkExtra</a> for the visualization of the simulated X-ray fluorescence spectra.
This library contains a number of useful widgets, such as a spreadsheet widget and a number of plotting tools, for your Gtk2 based GUI&rsquo;s.
Recently, I have become a minor contributor of this project, and I have been particularly active in improving the buildsystem and also generating RPM files for a number of Fedora/RHEL based distros, and DEB files for several recent releases of Ubuntu and Debian. Full instructions on how to obtain access to these packages, which are hosted by <a href="http://www.xmi.ugent.be">my old research group</a>, can be found <a href="http://gtkextra.sourceforge.net/cms/index.php?option=com_content&amp;view=article&amp;id=40&amp;Itemid=21">here</a>.</p>

<p>In todays blog post I am presenting an example of how one can relatively easily add printing and exporting capabilities to GtkExtra&rsquo;s <code>GtkPlotCanvas</code> widget. I will demonstrate this with a short program that I have written that contains a plot of a sine function, and two buttons that allow the user to invoke the dialog windows that will set up the exporting and the printing of the canvas, respectively.</p>

<!--more-->


<h2>Generating the interface</h2>

<p>Start off with a <code>GtkWindow</code> that contains a <code>GtkVBox</code>, which in turn is packed with two widgets: a <code>GtkHBox</code> that contains three buttons (Print, Save As and Quit), and the <code>GtkPlotCanvas</code>. The code itself is pretty straightforward Gtk+, except for the bit that deals with the <code>GtkPlotCanvas</code>. This is a perhaps a good time to mention that I am in no way a GtkExtra expert (or even Gtk+ for that matter&hellip;), and that the following code is the result of my studying of the GtkExtra examples, and the (unfortunately very limited) documentation. Anyway, I&rsquo;ll try and clarify as much as possible&hellip;</p>

<h3>Set up the canvas</h3>

<p>Define a canvas widget that will be used to draw the plot later and give it dimensions that correspond to those of the <a href="http://en.wikipedia.org/wiki/ISO_216">A4 paper size standard</a>. Other sizes are also available (letter, executive and legal), and are defined in <code>gtkplotpc.h</code>.The last parameter of the <code>gtk_plot_canvas_new</code> function is the magnification, which acts a scale factor for the dimensions of the canvas, and will therefore determine the size of the widget in the application. However, it has no impact on the size of the print or the size of the exported image.
Next, I disable the user-interaction with the canvas and its items with the call to <code>GTK_PLOT_CANVAS_UNSET_FLAGS</code>, and I define the <code>GdkColor</code>s that will be used in the plot and canvas. The last call sets explicitly the background color of the canvas to white.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">GtkWidget</span> <span class="o">*</span><span class="n">canvas</span> <span class="o">=</span> <span class="n">gtk_plot_canvas_new</span><span class="p">(</span><span class="n">GTK_PLOT_A4_H</span><span class="p">,</span> <span class="n">GTK_PLOT_A4_W</span><span class="p">,</span> <span class="mf">0.8</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_box_pack_start</span><span class="p">(</span><span class="n">GTK_BOX</span><span class="p">(</span><span class="n">mainbox</span><span class="p">),</span> <span class="n">canvas</span><span class="p">,</span> <span class="n">FALSE</span><span class="p">,</span> <span class="n">FALSE</span><span class="p">,</span> <span class="mi">2</span><span class="p">);</span>
</span><span class='line'><span class="n">GTK_PLOT_CANVAS_UNSET_FLAGS</span><span class="p">(</span><span class="n">GTK_PLOT_CANVAS</span><span class="p">(</span><span class="n">canvas</span><span class="p">),</span> <span class="n">GTK_PLOT_CANVAS_CAN_SELECT</span> <span class="o">|</span> <span class="n">GTK_PLOT_CANVAS_CAN_SELECT_ITEM</span><span class="p">);</span>
</span><span class='line'><span class="n">gdk_color_parse</span><span class="p">(</span><span class="s">&quot;white&quot;</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">white</span><span class="p">);</span>
</span><span class='line'><span class="n">gdk_colormap_alloc_color</span><span class="p">(</span><span class="n">gdk_colormap_get_system</span><span class="p">(),</span> <span class="o">&amp;</span><span class="n">white</span><span class="p">,</span> <span class="n">FALSE</span><span class="p">,</span> <span class="n">TRUE</span><span class="p">);</span>
</span><span class='line'><span class="n">gdk_color_parse</span><span class="p">(</span><span class="s">&quot;red&quot;</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">red</span><span class="p">);</span>
</span><span class='line'><span class="n">gdk_colormap_alloc_color</span><span class="p">(</span><span class="n">gdk_colormap_get_system</span><span class="p">(),</span> <span class="o">&amp;</span><span class="n">red</span><span class="p">,</span> <span class="n">FALSE</span><span class="p">,</span> <span class="n">TRUE</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_canvas_set_background</span><span class="p">(</span><span class="n">GTK_PLOT_CANVAS</span><span class="p">(</span><span class="n">canvas</span><span class="p">),</span><span class="o">&amp;</span><span class="n">white</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Add a plot to the window&hellip;</h3>

<p>The following calls will generate the plot and set its properties.
Most functionnames should be pretty selfexplanatory, especially when combined with the GtkExtra documentation.
I am not entirely confident about <code>gtk_plot_new_with_size</code> though: at least in this example the two last arguments (width and height), appear to have no influence on the result.
Anyway, after constructing the plot to your liking, it must be added to the <code>GtkPlotCanvas</code> that was defined in the previous section.
This is accomplished with the calls to <code>gtk_plot_canvas_plot_new</code> and <code>gtk_plot_canvas_put_child</code>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">GtkWidget</span> <span class="o">*</span><span class="n">plot_window</span><span class="p">;</span>
</span><span class='line'><span class="n">plot_window</span> <span class="o">=</span> <span class="n">gtk_plot_new_with_size</span><span class="p">(</span><span class="nb">NULL</span><span class="p">,</span><span class="mf">.65</span><span class="p">,</span><span class="mf">.45</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_set_background</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span><span class="o">&amp;</span><span class="n">white</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_hide_legends</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">));</span>
</span><span class='line'>  
</span><span class='line'><span class="n">gtk_plot_set_ticks</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span> <span class="n">GTK_PLOT_AXIS_X</span><span class="p">,</span> <span class="n">M_PI_2</span><span class="p">,</span> <span class="mi">5</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_set_ticks</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span> <span class="n">GTK_PLOT_AXIS_Y</span><span class="p">,</span> <span class="mf">0.2</span><span class="p">,</span> <span class="mi">5</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_grids_set_visible</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span><span class="n">TRUE</span> <span class="p">,</span><span class="n">FALSE</span><span class="p">,</span> <span class="n">TRUE</span><span class="p">,</span><span class="n">FALSE</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_axis_hide_title</span><span class="p">(</span><span class="n">gtk_plot_get_axis</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span> <span class="n">GTK_PLOT_AXIS_TOP</span><span class="p">));</span>
</span><span class='line'><span class="n">gtk_plot_axis_hide_title</span><span class="p">(</span><span class="n">gtk_plot_get_axis</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span> <span class="n">GTK_PLOT_AXIS_RIGHT</span><span class="p">));</span>
</span><span class='line'><span class="n">gtk_plot_axis_set_title</span><span class="p">(</span><span class="n">gtk_plot_get_axis</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span> <span class="n">GTK_PLOT_AXIS_BOTTOM</span><span class="p">),</span><span class="s">&quot;x&quot;</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_axis_set_title</span><span class="p">(</span><span class="n">gtk_plot_get_axis</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span> <span class="n">GTK_PLOT_AXIS_LEFT</span><span class="p">),</span><span class="s">&quot;y=sin(x)&quot;</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_axis_title_set_attributes</span><span class="p">(</span><span class="n">gtk_plot_get_axis</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span> <span class="n">GTK_PLOT_AXIS_LEFT</span><span class="p">),</span><span class="s">&quot;Helvetica&quot;</span><span class="p">,</span><span class="mi">40</span><span class="p">,</span><span class="mi">90</span><span class="p">,</span><span class="nb">NULL</span><span class="p">,</span><span class="nb">NULL</span><span class="p">,</span><span class="n">TRUE</span><span class="p">,</span><span class="n">GTK_JUSTIFY_CENTER</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_axis_title_set_attributes</span><span class="p">(</span><span class="n">gtk_plot_get_axis</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span> <span class="n">GTK_PLOT_AXIS_BOTTOM</span><span class="p">),</span><span class="s">&quot;Helvetica&quot;</span><span class="p">,</span><span class="mi">40</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nb">NULL</span><span class="p">,</span><span class="nb">NULL</span><span class="p">,</span><span class="n">TRUE</span><span class="p">,</span><span class="n">GTK_JUSTIFY_CENTER</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_axis_set_labels_attributes</span><span class="p">(</span><span class="n">gtk_plot_get_axis</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span> <span class="n">GTK_PLOT_AXIS_LEFT</span><span class="p">),</span><span class="s">&quot;Helvetica&quot;</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nb">NULL</span><span class="p">,</span><span class="nb">NULL</span><span class="p">,</span><span class="n">TRUE</span><span class="p">,</span><span class="n">GTK_JUSTIFY_RIGHT</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_axis_set_labels_attributes</span><span class="p">(</span><span class="n">gtk_plot_get_axis</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span> <span class="n">GTK_PLOT_AXIS_RIGHT</span><span class="p">),</span><span class="s">&quot;Helvetica&quot;</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nb">NULL</span><span class="p">,</span><span class="nb">NULL</span><span class="p">,</span><span class="n">TRUE</span><span class="p">,</span><span class="n">GTK_JUSTIFY_LEFT</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_axis_set_labels_attributes</span><span class="p">(</span><span class="n">gtk_plot_get_axis</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span> <span class="n">GTK_PLOT_AXIS_BOTTOM</span><span class="p">),</span><span class="s">&quot;Helvetica&quot;</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nb">NULL</span><span class="p">,</span><span class="nb">NULL</span><span class="p">,</span><span class="n">TRUE</span><span class="p">,</span><span class="n">GTK_JUSTIFY_CENTER</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_axis_show_labels</span><span class="p">(</span><span class="n">gtk_plot_get_axis</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span> <span class="n">GTK_PLOT_AXIS_TOP</span><span class="p">),</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">GtkPlotCanvasChild</span> <span class="o">*</span><span class="n">child</span> <span class="o">=</span> <span class="n">gtk_plot_canvas_plot_new</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">));</span>
</span><span class='line'><span class="n">gtk_plot_canvas_put_child</span><span class="p">(</span><span class="n">GTK_PLOT_CANVAS</span><span class="p">(</span><span class="n">canvas</span><span class="p">),</span> <span class="n">child</span><span class="p">,</span> <span class="mf">.15</span><span class="p">,</span><span class="mf">.05</span><span class="p">,</span><span class="mf">.90</span><span class="p">,</span><span class="mf">.85</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h3>&hellip;and finish off with the data</h3>

<p>So far, we have defined the <code>GtkPlotCanvas</code> and the <code>GtkPlot</code>. The latter currently consists of an empty grid. I made things a bit more interesting by adding a graph of a sine function. The following lines calculate 1000 values of the sine function within the interval [0, 4π], and add them subsequently to a <code>GtkPlotData</code> variable, that in turn is added to the <code>GtkPlot</code> with <code>gtk_plot_add_data</code>
As with the grid in the previous section, it is possible to change the properties of the graph using a few appropriately named functions.
This part of the code finishes by drawing and showing all widgets. I am doing this here with several calls, some of which are definitely unnecessary, but the documentation and examples of GtkExtra are pretty unclear on how to do this (especially when updating, erasing canvases, plots etc). Anyway, calling all of them seems to work just fine :&ndash;)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="c1">//calculate a sine function</span>
</span><span class='line'><span class="kt">double</span> <span class="o">*</span><span class="n">xvals</span> <span class="o">=</span> <span class="n">g_malloc</span><span class="p">(</span><span class="k">sizeof</span><span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="o">*</span><span class="mi">1000</span><span class="p">);</span>
</span><span class='line'><span class="kt">double</span> <span class="o">*</span><span class="n">yvals</span> <span class="o">=</span> <span class="n">g_malloc</span><span class="p">(</span><span class="k">sizeof</span><span class="p">(</span><span class="kt">double</span><span class="p">)</span><span class="o">*</span><span class="mi">1000</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span> <span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">1000</span> <span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">xvals</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="mi">4</span><span class="o">*</span><span class="n">M_PI</span><span class="o">*</span><span class="n">i</span><span class="o">/</span><span class="mi">999</span><span class="p">;</span>
</span><span class='line'>  <span class="n">yvals</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">sin</span><span class="p">(</span><span class="n">xvals</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="n">GtkPlotData</span> <span class="o">*</span><span class="n">dataset</span><span class="p">;</span>
</span><span class='line'><span class="n">dataset</span> <span class="o">=</span> <span class="n">GTK_PLOT_DATA</span><span class="p">(</span><span class="n">gtk_plot_data_new</span><span class="p">());</span>
</span><span class='line'><span class="n">gtk_plot_add_data</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span><span class="n">dataset</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_data_set_numpoints</span><span class="p">(</span><span class="n">dataset</span><span class="p">,</span> <span class="mi">1000</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_data_set_x</span><span class="p">(</span><span class="n">dataset</span><span class="p">,</span> <span class="n">xvals</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_data_set_y</span><span class="p">(</span><span class="n">dataset</span><span class="p">,</span> <span class="n">yvals</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_set_range</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span><span class="mf">0.0</span><span class="p">,</span> <span class="mi">4</span><span class="o">*</span><span class="n">M_PI</span><span class="p">,</span> <span class="o">-</span><span class="mf">1.0</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_clip_data</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span> <span class="n">TRUE</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_widget_show</span><span class="p">(</span><span class="n">GTK_WIDGET</span><span class="p">(</span><span class="n">dataset</span><span class="p">));</span>
</span><span class='line'><span class="n">gtk_plot_data_set_line_attributes</span><span class="p">(</span><span class="n">dataset</span><span class="p">,</span><span class="n">GTK_PLOT_LINE_SOLID</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="o">&amp;</span><span class="n">red</span><span class="p">);</span>
</span><span class='line'><span class="n">gtk_plot_canvas_paint</span><span class="p">(</span><span class="n">GTK_PLOT_CANVAS</span><span class="p">(</span><span class="n">canvas</span><span class="p">));</span>
</span><span class='line'><span class="n">gtk_widget_queue_draw</span><span class="p">(</span><span class="n">GTK_WIDGET</span><span class="p">(</span><span class="n">canvas</span><span class="p">));</span>
</span><span class='line'><span class="n">gtk_plot_canvas_refresh</span><span class="p">(</span><span class="n">GTK_PLOT_CANVAS</span><span class="p">(</span><span class="n">canvas</span><span class="p">));</span>
</span><span class='line'><span class="n">gtk_plot_paint</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">));</span>
</span><span class='line'><span class="n">gtk_plot_refresh</span><span class="p">(</span><span class="n">GTK_PLOT</span><span class="p">(</span><span class="n">plot_window</span><span class="p">),</span><span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">gtk_widget_show_all</span><span class="p">(</span><span class="n">window</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">gtk_main</span><span class="p">();</span> 
</span></code></pre></td></tr></table></div></figure>


<p>After compilation with something like:</p>

<pre><code>gcc -o gtkextra-print-export `pkg-config --cflags gtkextra-3.0` gtkextra-print-export.c `pkg-config --libs gtkextra-3.0`
</code></pre>

<p>and running <code>gtkextra-print-export</code>, you should get something like:</p>

<p><img class="center" src="http://tschoonj.github.io/images/gtkextra.png"></p>

<h2>Printing the canvas</h2>

<p>Both the printing and exporting of the canvas rely on Cairo. The most important function here is <code>gtk_plot_canvas_export_cairo</code>, which accepts a cairo context as argument and will &lsquo;paint&rsquo; the canvas on it. When printing, this cairo context is produced by <code>gtk_print_context_get_cairo_context</code>, as is shown in the following code snippet. It contains both the &lsquo;clicked&rsquo; callback for the Print button, as well as the &lsquo;draw-page&rsquo; callback for the <code>GtkPrintOperation</code>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">void</span> <span class="nf">draw_page</span><span class="p">(</span><span class="n">GtkPrintOperation</span> <span class="o">*</span><span class="n">operation</span><span class="p">,</span> <span class="n">GtkPrintContext</span> <span class="o">*</span><span class="n">context</span><span class="p">,</span> <span class="n">gint</span> <span class="n">page_nr</span><span class="p">,</span> <span class="k">struct</span> <span class="n">dialogData</span> <span class="o">*</span><span class="n">dd</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">cairo_t</span> <span class="o">*</span><span class="n">cr</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//the following two lines do all the magic</span>
</span><span class='line'>        <span class="n">cr</span> <span class="o">=</span> <span class="n">gtk_print_context_get_cairo_context</span><span class="p">(</span><span class="n">context</span><span class="p">);</span>
</span><span class='line'>        <span class="n">gtk_plot_canvas_export_cairo</span><span class="p">(</span><span class="n">GTK_PLOT_CANVAS</span><span class="p">(</span><span class="n">dd</span><span class="o">-&gt;</span><span class="n">canvas</span><span class="p">),</span><span class="n">cr</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">print_button_clicked_cb</span><span class="p">(</span><span class="n">GtkWidget</span> <span class="o">*</span><span class="n">button</span><span class="p">,</span> <span class="k">struct</span> <span class="n">dialogData</span> <span class="o">*</span><span class="n">dd</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">GtkPrintOperation</span> <span class="o">*</span><span class="n">operation</span><span class="p">;</span>
</span><span class='line'>        <span class="n">GError</span> <span class="o">*</span><span class="n">error</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>        <span class="n">GtkPrintOperationResult</span> <span class="n">res</span><span class="p">;</span>
</span><span class='line'>  <span class="n">GtkPrintSettings</span> <span class="o">*</span><span class="n">print_settings</span><span class="p">;</span>
</span><span class='line'>  <span class="n">GtkPageSetup</span> <span class="o">*</span><span class="n">page_setup</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//print settings</span>
</span><span class='line'>        <span class="n">print_settings</span> <span class="o">=</span> <span class="n">gtk_print_settings_new</span><span class="p">();</span>
</span><span class='line'>        <span class="n">gtk_print_settings_set_orientation</span><span class="p">(</span><span class="n">print_settings</span><span class="p">,</span><span class="n">GTK_PAGE_ORIENTATION_LANDSCAPE</span><span class="p">);</span>
</span><span class='line'>        <span class="n">gtk_print_settings_set_paper_size</span><span class="p">(</span><span class="n">print_settings</span><span class="p">,</span><span class="n">gtk_paper_size_new</span><span class="p">(</span><span class="n">GTK_PAPER_NAME_A4</span><span class="p">));</span>
</span><span class='line'>        <span class="n">page_setup</span> <span class="o">=</span> <span class="n">gtk_page_setup_new</span><span class="p">();</span>
</span><span class='line'>        <span class="n">gtk_page_setup_set_orientation</span><span class="p">(</span><span class="n">page_setup</span><span class="p">,</span><span class="n">GTK_PAGE_ORIENTATION_LANDSCAPE</span><span class="p">);</span>
</span><span class='line'>        <span class="n">gtk_page_setup_set_paper_size_and_default_margins</span><span class="p">(</span><span class="n">page_setup</span><span class="p">,</span><span class="n">gtk_paper_size_new</span><span class="p">(</span><span class="n">GTK_PAPER_NAME_A4</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">operation</span> <span class="o">=</span> <span class="n">gtk_print_operation_new</span><span class="p">();</span>
</span><span class='line'>        <span class="n">gtk_print_operation_set_print_settings</span><span class="p">(</span><span class="n">operation</span><span class="p">,</span><span class="n">print_settings</span><span class="p">);</span>
</span><span class='line'>        <span class="n">gtk_print_operation_set_default_page_setup</span><span class="p">(</span><span class="n">operation</span><span class="p">,</span><span class="n">page_setup</span><span class="p">);</span>
</span><span class='line'>        <span class="n">gtk_print_operation_set_show_progress</span><span class="p">(</span><span class="n">operation</span><span class="p">,</span><span class="n">TRUE</span><span class="p">);</span>
</span><span class='line'>        <span class="n">gtk_print_operation_set_track_print_status</span><span class="p">(</span><span class="n">operation</span><span class="p">,</span> <span class="n">TRUE</span><span class="p">);</span>
</span><span class='line'>        <span class="n">g_signal_connect</span><span class="p">(</span><span class="n">G_OBJECT</span><span class="p">(</span><span class="n">operation</span><span class="p">),</span> <span class="s">&quot;draw-page&quot;</span><span class="p">,</span> <span class="n">G_CALLBACK</span><span class="p">(</span><span class="n">draw_page</span><span class="p">),</span> <span class="n">dd</span><span class="p">);</span>
</span><span class='line'>        <span class="n">gtk_print_operation_set_n_pages</span><span class="p">(</span><span class="n">operation</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">res</span> <span class="o">=</span> <span class="n">gtk_print_operation_run</span><span class="p">(</span><span class="n">operation</span><span class="p">,</span> <span class="n">GTK_PRINT_OPERATION_ACTION_PRINT_DIALOG</span><span class="p">,</span> <span class="n">GTK_WINDOW</span><span class="p">(</span><span class="n">dd</span><span class="o">-&gt;</span><span class="n">window</span><span class="p">),</span><span class="o">&amp;</span><span class="n">error</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">res</span> <span class="o">==</span> <span class="n">GTK_PRINT_OPERATION_RESULT_APPLY</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">g_object_unref</span><span class="p">(</span><span class="n">print_settings</span><span class="p">);</span>
</span><span class='line'>                <span class="n">print_settings</span> <span class="o">=</span> <span class="n">g_object_ref</span><span class="p">(</span><span class="n">gtk_print_operation_get_print_settings</span><span class="p">(</span><span class="n">operation</span><span class="p">));</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="n">g_object_unref</span><span class="p">(</span><span class="n">operation</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Exporting the canvas to a file</h2>

<p>In this example, I have created the possibility to export to Encapsulated PostScript, PDF and PNG. Cairo also offers <a href="http://www.cairographics.org/manual/cairo-SVG-Surfaces.html">SVG support</a>, which may be useful to some. Other fileformats like JPEG may be supported through <a href="http://openil.sourceforge.net">devIL</a>&hellip;</p>

<p>The function in this example is a callback of the Save As button, and pops up a <code>GtkFileChooserDialog</code>, with three <code>GtkFileFilter</code>s, each corresponding to one of the supported fileformats. After selecting a filter and choosing the filename, a cairo surface is created for the selected filetype. Next, a cairo context is created for the surface, which will be used to paint the canvas on using <code>gtk_plot_canvas_export_cairo</code>. Multipage formats such as PostScript and PDF require the extra call to <code>cairo_show_page</code>. The function terminates after destroying the cairo surfaces and contexts.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">void</span> <span class="nf">export_button_clicked_cb</span><span class="p">(</span><span class="n">GtkWidget</span> <span class="o">*</span><span class="n">button</span><span class="p">,</span> <span class="k">struct</span> <span class="n">dialogData</span> <span class="o">*</span><span class="n">dd</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">GtkWidget</span> <span class="o">*</span><span class="n">dialog</span><span class="p">;</span>
</span><span class='line'>        <span class="n">GtkFileFilter</span> <span class="o">*</span><span class="n">filter</span><span class="p">;</span>
</span><span class='line'>        <span class="n">gchar</span> <span class="o">*</span><span class="n">filename</span><span class="p">;</span>
</span><span class='line'>        <span class="n">cairo_t</span> <span class="o">*</span><span class="n">cr</span><span class="p">;</span>
</span><span class='line'>        <span class="n">cairo_surface_t</span> <span class="o">*</span><span class="n">surface</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">dialog</span> <span class="o">=</span> <span class="n">gtk_file_chooser_dialog_new</span><span class="p">(</span><span class="s">&quot;Export spectra&quot;</span><span class="p">,</span>
</span><span class='line'>                <span class="n">GTK_WINDOW</span><span class="p">(</span><span class="n">dd</span><span class="o">-&gt;</span><span class="n">window</span><span class="p">),</span> <span class="n">GTK_FILE_CHOOSER_ACTION_SAVE</span><span class="p">,</span>
</span><span class='line'>                <span class="n">GTK_STOCK_CANCEL</span><span class="p">,</span> <span class="n">GTK_RESPONSE_CANCEL</span><span class="p">,</span>
</span><span class='line'>                <span class="n">GTK_STOCK_SAVE</span><span class="p">,</span> <span class="n">GTK_RESPONSE_ACCEPT</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">gtk_file_chooser_set_do_overwrite_confirmation</span> <span class="p">(</span><span class="n">GTK_FILE_CHOOSER</span> <span class="p">(</span><span class="n">dialog</span><span class="p">),</span> <span class="n">TRUE</span><span class="p">);</span>
</span><span class='line'>        <span class="n">filter</span> <span class="o">=</span> <span class="n">gtk_file_filter_new</span><span class="p">();</span>
</span><span class='line'>        <span class="n">gtk_file_filter_add_pattern</span><span class="p">(</span><span class="n">filter</span><span class="p">,</span><span class="s">&quot;*.eps&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">gtk_file_filter_set_name</span><span class="p">(</span><span class="n">filter</span><span class="p">,</span><span class="s">&quot;EPS (Encapsulated PostScript)&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">gtk_file_chooser_add_filter</span><span class="p">(</span><span class="n">GTK_FILE_CHOOSER</span><span class="p">(</span><span class="n">dialog</span><span class="p">),</span> <span class="n">filter</span><span class="p">);</span>
</span><span class='line'>        <span class="n">filter</span> <span class="o">=</span> <span class="n">gtk_file_filter_new</span><span class="p">();</span>
</span><span class='line'>        <span class="n">gtk_file_filter_add_pattern</span><span class="p">(</span><span class="n">filter</span><span class="p">,</span><span class="s">&quot;*.pdf&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">gtk_file_filter_set_name</span><span class="p">(</span><span class="n">filter</span><span class="p">,</span><span class="s">&quot;PDF (Adobe Portable Document Format)&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">gtk_file_chooser_add_filter</span><span class="p">(</span><span class="n">GTK_FILE_CHOOSER</span><span class="p">(</span><span class="n">dialog</span><span class="p">),</span> <span class="n">filter</span><span class="p">);</span>
</span><span class='line'>        <span class="n">filter</span> <span class="o">=</span> <span class="n">gtk_file_filter_new</span><span class="p">();</span>
</span><span class='line'>        <span class="n">gtk_file_filter_add_pattern</span><span class="p">(</span><span class="n">filter</span><span class="p">,</span><span class="s">&quot;*.png&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">gtk_file_filter_set_name</span><span class="p">(</span><span class="n">filter</span><span class="p">,</span><span class="s">&quot;PNG (Portable Network Graphics)&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">gtk_file_chooser_add_filter</span><span class="p">(</span><span class="n">GTK_FILE_CHOOSER</span><span class="p">(</span><span class="n">dialog</span><span class="p">),</span> <span class="n">filter</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">gtk_dialog_run</span><span class="p">(</span><span class="n">GTK_DIALOG</span><span class="p">(</span><span class="n">dialog</span><span class="p">))</span> <span class="o">==</span> <span class="n">GTK_RESPONSE_ACCEPT</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">filename</span> <span class="o">=</span> <span class="n">gtk_file_chooser_get_filename</span><span class="p">(</span><span class="n">GTK_FILE_CHOOSER</span><span class="p">(</span><span class="n">dialog</span><span class="p">));</span>
</span><span class='line'>                <span class="c1">//get selected filter</span>
</span><span class='line'>                <span class="n">filter</span> <span class="o">=</span> <span class="n">gtk_file_chooser_get_filter</span><span class="p">(</span><span class="n">GTK_FILE_CHOOSER</span><span class="p">(</span><span class="n">dialog</span><span class="p">));</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">strncmp</span><span class="p">(</span><span class="n">gtk_file_filter_get_name</span><span class="p">(</span><span class="n">filter</span><span class="p">),</span><span class="s">&quot;EPS&quot;</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                        <span class="k">if</span> <span class="p">(</span><span class="n">strcmp</span><span class="p">(</span><span class="n">filename</span><span class="o">+</span><span class="n">strlen</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span><span class="o">-</span><span class="mi">4</span><span class="p">,</span> <span class="s">&quot;.eps&quot;</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                                <span class="n">filename</span> <span class="o">=</span> <span class="p">(</span><span class="n">gchar</span> <span class="o">*</span><span class="p">)</span> <span class="n">g_realloc</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">gchar</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="n">strlen</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span><span class="o">+</span><span class="mi">4</span><span class="p">));</span>
</span><span class='line'>                                <span class="n">strcat</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span><span class="s">&quot;.eps&quot;</span><span class="p">);</span>
</span><span class='line'>                        <span class="p">}</span>
</span><span class='line'>                        <span class="n">surface</span> <span class="o">=</span> <span class="n">cairo_ps_surface_create</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span><span class="mi">842</span><span class="p">,</span><span class="mi">595</span><span class="p">);</span>
</span><span class='line'>                        <span class="n">cairo_ps_surface_set_eps</span><span class="p">(</span><span class="n">surface</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>                        <span class="n">cr</span> <span class="o">=</span> <span class="n">cairo_create</span><span class="p">(</span><span class="n">surface</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>                        <span class="n">gtk_plot_canvas_export_cairo</span><span class="p">(</span><span class="n">GTK_PLOT_CANVAS</span><span class="p">(</span><span class="n">dd</span><span class="o">-&gt;</span><span class="n">canvas</span><span class="p">),</span><span class="n">cr</span><span class="p">);</span>
</span><span class='line'>                        <span class="n">cairo_show_page</span><span class="p">(</span><span class="n">cr</span><span class="p">);</span>
</span><span class='line'>                        <span class="n">cairo_surface_destroy</span><span class="p">(</span><span class="n">surface</span><span class="p">);</span>
</span><span class='line'>                        <span class="n">cairo_destroy</span><span class="p">(</span><span class="n">cr</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>      <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">strncmp</span><span class="p">(</span><span class="n">gtk_file_filter_get_name</span><span class="p">(</span><span class="n">filter</span><span class="p">),</span><span class="s">&quot;PDF&quot;</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                        <span class="k">if</span> <span class="p">(</span><span class="n">strcmp</span><span class="p">(</span><span class="n">filename</span><span class="o">+</span><span class="n">strlen</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span><span class="o">-</span><span class="mi">4</span><span class="p">,</span> <span class="s">&quot;.pdf&quot;</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                                <span class="n">filename</span> <span class="o">=</span> <span class="p">(</span><span class="n">gchar</span> <span class="o">*</span><span class="p">)</span> <span class="n">g_realloc</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">gchar</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="n">strlen</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span><span class="o">+</span><span class="mi">4</span><span class="p">));</span>
</span><span class='line'>                                <span class="n">strcat</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span><span class="s">&quot;.pdf&quot;</span><span class="p">);</span>
</span><span class='line'>                        <span class="p">}</span>
</span><span class='line'>                        <span class="n">surface</span> <span class="o">=</span> <span class="n">cairo_pdf_surface_create</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span><span class="mf">842.0</span><span class="p">,</span><span class="mf">595.0</span><span class="p">);</span>
</span><span class='line'>                        <span class="n">cr</span> <span class="o">=</span> <span class="n">cairo_create</span><span class="p">(</span><span class="n">surface</span><span class="p">);</span>
</span><span class='line'>                        <span class="n">gtk_plot_canvas_export_cairo</span><span class="p">(</span><span class="n">GTK_PLOT_CANVAS</span><span class="p">(</span><span class="n">dd</span><span class="o">-&gt;</span><span class="n">canvas</span><span class="p">),</span><span class="n">cr</span><span class="p">);</span>
</span><span class='line'>                        <span class="n">cairo_show_page</span><span class="p">(</span><span class="n">cr</span><span class="p">);</span>
</span><span class='line'>                        <span class="n">cairo_surface_destroy</span><span class="p">(</span><span class="n">surface</span><span class="p">);</span>
</span><span class='line'>                        <span class="n">cairo_destroy</span><span class="p">(</span><span class="n">cr</span><span class="p">);</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>                <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">strncmp</span><span class="p">(</span><span class="n">gtk_file_filter_get_name</span><span class="p">(</span><span class="n">filter</span><span class="p">),</span><span class="s">&quot;PNG&quot;</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                        <span class="k">if</span> <span class="p">(</span><span class="n">strcmp</span><span class="p">(</span><span class="n">filename</span><span class="o">+</span><span class="n">strlen</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span><span class="o">-</span><span class="mi">4</span><span class="p">,</span> <span class="s">&quot;.png&quot;</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                                <span class="n">filename</span> <span class="o">=</span> <span class="p">(</span><span class="n">gchar</span> <span class="o">*</span><span class="p">)</span> <span class="n">g_realloc</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span><span class="k">sizeof</span><span class="p">(</span><span class="n">gchar</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="n">strlen</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span><span class="o">+</span><span class="mi">4</span><span class="p">));</span>
</span><span class='line'>                                <span class="n">strcat</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span><span class="s">&quot;.png&quot;</span><span class="p">);</span>
</span><span class='line'>                        <span class="p">}</span>
</span><span class='line'>                        <span class="n">surface</span> <span class="o">=</span> <span class="n">cairo_image_surface_create</span><span class="p">(</span><span class="n">CAIRO_FORMAT_ARGB32</span><span class="p">,</span> <span class="mi">842</span><span class="p">,</span> <span class="mi">595</span><span class="p">);</span>
</span><span class='line'>                        <span class="n">cr</span> <span class="o">=</span> <span class="n">cairo_create</span><span class="p">(</span><span class="n">surface</span><span class="p">);</span>
</span><span class='line'>                        <span class="n">gtk_plot_canvas_export_cairo</span><span class="p">(</span><span class="n">GTK_PLOT_CANVAS</span><span class="p">(</span><span class="n">dd</span><span class="o">-&gt;</span><span class="n">canvas</span><span class="p">),</span><span class="n">cr</span><span class="p">);</span>
</span><span class='line'>                        <span class="n">cairo_surface_write_to_png</span><span class="p">(</span><span class="n">surface</span><span class="p">,</span><span class="n">filename</span><span class="p">);</span>
</span><span class='line'>                        <span class="n">cairo_surface_destroy</span><span class="p">(</span><span class="n">surface</span><span class="p">);</span>
</span><span class='line'>                        <span class="n">cairo_destroy</span><span class="p">(</span><span class="n">cr</span><span class="p">);</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>                <span class="n">g_free</span><span class="p">(</span><span class="n">filename</span><span class="p">);</span>
</span><span class='line'>                <span class="n">gtk_widget_destroy</span><span class="p">(</span><span class="n">dialog</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>                <span class="n">gtk_widget_destroy</span><span class="p">(</span><span class="n">dialog</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>The code</h2>

<p>This is the full code: feel free to hack away at it.
It is taken from <a href="https://github.com/tschoonj/xmimsim/blob/master/bin/xmimsim-gui-results.c">xmimsim-gui-results.c</a>, which contains a lot more GtkExtra related code: drawing lines, changing graph properties, hiding data etc.
Keep in mind that up to today, GtkExtra is still only compatible with Gtk2. However, the developers are actively working on providing Gtk3 support as well. Any help in accomplishing this transition would be greatly appreciated!</p>

<div><script src='https://gist.github.com/6040427.js'></script>
<noscript><pre><code></code></pre></noscript></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Checking for updates using git tags]]></title>
    <link href="http://tschoonj.github.io/blog/2013/07/08/checking-for-updates-using-git-tags/"/>
    <updated>2013-07-08T19:39:00+01:00</updated>
    <id>http://tschoonj.github.io/blog/2013/07/08/checking-for-updates-using-git-tags</id>
    <content type="html"><![CDATA[<p>At some point during the development of version 2.0 of my software package <a href="http://github.com/tschoonj/xmimsim">XMI-MSIM</a>, I decided to implement a routine that would allow for the program to check if newer versions (updates) were available. This would be extremely useful for the users of the Windows and Mac OS X builds of my package, since these operating systems do not come with package-management tools as most Linux distributions do (I am staying far away from Mac App Store and Windows store as I am not willing to pay their developer fees).</p>

<p>Initially I was looking at <a href="http://sparkle.andymatuschak.org">Sparkle</a>, a fantastic tool for OS X apps.
However, this would mean a different solution for my Windows build&hellip;</p>

<p>Since my goal is to keep the platform specific code as low as possible (#ifdef&rsquo;s really are quite ugly things), obviously I had to come up with a different solution.</p>

<!--more-->


<h2>Getting the tags with curl</h2>

<p>In a rare moment of clarity, I came up with the idea of using git tags for this. Like most people, I am using the tags to indicate releases, and as a rule I include the version number in the tagname (e.g. XMI-MSIM-1.0). My method consists of having a routine called <code>check_for_updates</code> (what&rsquo;s in a name?), download the list of tags from github.com (using the <a href="http://developer.github.com/v3/git/tags/">github v3 API for tags</a>). As I was writing (this part of) my application XMI-MSIM in C, I was looking for a library that could easily accomplish this. The quest yielded <a href="http://curl.haxx.se">libcurl</a>, an extremely versatile tool for transferring data using many, many protocols. The code I used for this was something like (full code at the end of this post):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'>    <span class="c1">//this line is obviously specific to your github account name and project name.</span>
</span><span class='line'>  <span class="c1">//Change it accordingly</span>
</span><span class='line'>  <span class="err">#</span><span class="n">define</span> <span class="n">XMIMSIM_GITHUB_TAGS_LOCATION</span> <span class="s">&quot;https://api.github.com/repos/tschoonj/xmimsim/git/refs/tags&quot;</span>
</span><span class='line'>
</span><span class='line'>        <span class="kt">char</span> <span class="n">curlerrors</span><span class="p">[</span><span class="n">CURL_ERROR_SIZE</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>        <span class="n">CURL</span> <span class="o">*</span><span class="n">curl</span><span class="p">;</span>
</span><span class='line'>        <span class="n">CURLcode</span> <span class="n">res</span><span class="p">;</span>
</span><span class='line'>        <span class="k">struct</span> <span class="n">MemoryStruct</span> <span class="n">chunk</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">chunk</span><span class="p">.</span><span class="n">memory</span> <span class="o">=</span> <span class="n">malloc</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>        <span class="n">chunk</span><span class="p">.</span><span class="n">size</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">fprintf</span><span class="p">(</span><span class="n">stdout</span><span class="p">,</span><span class="s">&quot;checking for updates...</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//setup curl</span>
</span><span class='line'>        <span class="n">curl</span> <span class="o">=</span> <span class="n">curl_easy_init</span><span class="p">();</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">curl</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span><span class="s">&quot;Could not initialize cURL</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>                <span class="k">return</span> <span class="n">XMIMSIM_UPDATES_ERROR</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">curl_easy_setopt</span><span class="p">(</span><span class="n">curl</span><span class="p">,</span> <span class="n">CURLOPT_URL</span><span class="p">,</span><span class="n">XMIMSIM_GITHUB_TAGS_LOCATION</span><span class="p">);</span>
</span><span class='line'>        <span class="n">curl_easy_setopt</span><span class="p">(</span><span class="n">curl</span><span class="p">,</span> <span class="n">CURLOPT_SSL_VERIFYPEER</span><span class="p">,</span> <span class="mi">0L</span><span class="p">);</span>
</span><span class='line'>        <span class="n">curl_easy_setopt</span><span class="p">(</span><span class="n">curl</span><span class="p">,</span> <span class="n">CURLOPT_WRITEFUNCTION</span><span class="p">,</span> <span class="n">WriteMemoryCallback</span><span class="p">);</span>
</span><span class='line'>        <span class="n">curl_easy_setopt</span><span class="p">(</span><span class="n">curl</span><span class="p">,</span> <span class="n">CURLOPT_WRITEDATA</span><span class="p">,</span> <span class="p">(</span><span class="kt">void</span> <span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">chunk</span><span class="p">);</span>
</span><span class='line'>        <span class="n">curl_easy_setopt</span><span class="p">(</span><span class="n">curl</span><span class="p">,</span> <span class="n">CURLOPT_USERAGENT</span><span class="p">,</span> <span class="s">&quot;libcurl-agent/1.0&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="n">curl_easy_setopt</span><span class="p">(</span><span class="n">curl</span><span class="p">,</span> <span class="n">CURLOPT_ERRORBUFFER</span><span class="p">,</span> <span class="n">curlerrors</span><span class="p">);</span>
</span><span class='line'>        <span class="n">curl_easy_setopt</span><span class="p">(</span><span class="n">curl</span><span class="p">,</span> <span class="n">CURLOPT_CONNECTTIMEOUT</span><span class="p">,</span> <span class="mi">4L</span><span class="p">);</span>
</span><span class='line'>        <span class="n">res</span> <span class="o">=</span> <span class="n">curl_easy_perform</span><span class="p">(</span><span class="n">curl</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">res</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span><span class="s">&quot;check_for_updates: %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">curlerrors</span><span class="p">);</span>
</span><span class='line'>                <span class="k">return</span> <span class="n">XMIMSIM_UPDATES_ERROR</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">curl_easy_cleanup</span><span class="p">(</span><span class="n">curl</span><span class="p">);</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<h2>Parse the JSON code with Json-Glib and compare versions</h2>

<p>The buffer that is returned in <code>chunk</code>, contains JSON code. To parse this, I used the Json-Glib library, a logical choice since my project is written in Gtk+ anyway&hellip; Code extract:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'>    <span class="n">parser</span> <span class="o">=</span> <span class="n">json_parser_new</span><span class="p">();</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">json_parser_load_from_data</span><span class="p">(</span><span class="n">parser</span><span class="p">,</span> <span class="n">chunk</span><span class="p">.</span><span class="n">memory</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="o">&amp;</span><span class="n">error</span><span class="p">)</span> <span class="o">==</span>  <span class="n">FALSE</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="n">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                        <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span><span class="s">&quot;check_for_updates: %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span><span class="n">error</span><span class="o">-&gt;</span><span class="n">message</span><span class="p">);</span>
</span><span class='line'>                        <span class="k">return</span> <span class="n">XMIMSIM_UPDATES_ERROR</span><span class="p">;</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">JsonNode</span> <span class="o">*</span><span class="n">rootNode</span> <span class="o">=</span> <span class="n">json_parser_get_root</span><span class="p">(</span><span class="n">parser</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span><span class="p">(</span><span class="n">json_node_get_node_type</span><span class="p">(</span><span class="n">rootNode</span><span class="p">)</span> <span class="o">!=</span> <span class="n">JSON_NODE_ARRAY</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span><span class="s">&quot;check_for_updates: rootNode is not an Array</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>                <span class="k">return</span> <span class="n">XMIMSIM_UPDATES_ERROR</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">JsonArray</span> <span class="o">*</span><span class="n">rootArray</span> <span class="o">=</span> <span class="n">json_node_get_array</span><span class="p">(</span><span class="n">rootNode</span><span class="p">);</span>
</span><span class='line'>        <span class="kt">char</span> <span class="o">*</span><span class="n">max_version</span> <span class="o">=</span> <span class="n">g_strdup</span><span class="p">(</span><span class="n">PACKAGE_VERSION</span><span class="p">);</span>
</span><span class='line'>        <span class="kt">char</span> <span class="o">*</span><span class="n">current_version</span> <span class="o">=</span> <span class="n">g_strdup</span><span class="p">(</span><span class="n">max_version</span><span class="p">);</span>
</span><span class='line'>        <span class="n">json_array_foreach_element</span><span class="p">(</span><span class="n">rootArray</span><span class="p">,</span> <span class="p">(</span><span class="n">JsonArrayForeach</span><span class="p">)</span> <span class="n">check_version_of_tag</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">max_version</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="kt">int</span> <span class="n">rv</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="n">g_ascii_strtod</span><span class="p">(</span><span class="n">max_version</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">)</span> <span class="o">&gt;</span> <span class="n">g_ascii_strtod</span><span class="p">(</span><span class="n">current_version</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">))</span>
</span><span class='line'>                <span class="n">rv</span> <span class="o">=</span> <span class="n">XMIMSIM_UPDATES_AVAILABLE</span><span class="p">;</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>                <span class="n">rv</span> <span class="o">=</span> <span class="n">XMIMSIM_UPDATES_NONE</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="o">*</span><span class="n">max_version_rv</span> <span class="o">=</span> <span class="n">strdup</span><span class="p">(</span><span class="n">g_strstrip</span><span class="p">(</span><span class="n">max_version</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">g_object_unref</span><span class="p">(</span><span class="n">parser</span><span class="p">);</span>
</span><span class='line'>        <span class="n">fprintf</span><span class="p">(</span><span class="n">stdout</span><span class="p">,</span><span class="s">&quot;done checking for updates</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Important here is the <code>json_array_foreach_element</code> function, which will call <code>check_version_of_tag</code> for each tag, and update the highest found tag version number with each iteration.</p>

<p>After this, all that needs to be done is to compare this highest tag version with the internal version number (<code>PACKAGE_VERSION</code>, typically provided by a configure script), and the result is returned.</p>

<p>Now the method that I just described assumes that the version numbering is done with one major number and one minor number, allowing me to easily convert into a float for version comparison. Although this is sufficient for my personal needs, others may have to come up with a slightly more complex algorithm allowing to compare version numbers consisting of a major, minor and macro version number.</p>

<h2>The code</h2>

<p>This is the full code: feel free to hack away at it.
It is taken from <a href="https://github.com/tschoonj/xmimsim/blob/master/bin/xmimsim-gui-updater.c">xmimsim-gui-updater.c</a>, which also contains code to download the new packages from a webserver (also using curl).</p>

<div><script src='https://gist.github.com/5951294.js'></script>
<noscript><pre><code></code></pre></noscript></div>



]]></content>
  </entry>
  
</feed>
